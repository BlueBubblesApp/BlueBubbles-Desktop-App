{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/main/main.ts","webpack:///./src/main/server/constants.ts","webpack:///./src/main/server/databases/chat/entity/Attachment.ts","webpack:///./src/main/server/databases/chat/entity/AttachmentMessageJoin.ts","webpack:///./src/main/server/databases/chat/entity/Chat.ts","webpack:///./src/main/server/databases/chat/entity/ChatHandleJoin.ts","webpack:///./src/main/server/databases/chat/entity/ChatMessageJoin.ts","webpack:///./src/main/server/databases/chat/entity/Handle.ts","webpack:///./src/main/server/databases/chat/entity/Message.ts","webpack:///./src/main/server/databases/chat/entity/index.ts","webpack:///./src/main/server/databases/chat/index.ts","webpack:///./src/main/server/databases/config/entity/Config.ts","webpack:///./src/main/server/databases/config/entity/index.ts","webpack:///./src/main/server/databases/config/index.ts","webpack:///./src/main/server/databases/transformers/BooleanTransformer.ts","webpack:///./src/main/server/databases/transformers/index.ts","webpack:///./src/main/server/fileSystem/index.ts","webpack:///./src/main/server/index.ts","webpack:///./src/main/server/services/index.ts","webpack:///./src/main/server/services/socket/index.ts","webpack:///external \"electron\"","webpack:///external \"fs\"","webpack:///external \"path\"","webpack:///external \"reflect-metadata\"","webpack:///external \"socket.io-client\"","webpack:///external \"typeorm\"","webpack:///external \"url\""],"names":["win","BlueBubbles","BackendServer","start","createWindow","BrowserWindow","width","height","minWidth","minHeight","transparent","frame","webPreferences","nodeIntegration","process","env","ELECTRON_DISABLE_SECURITY_WARNINGS","loadURL","webContents","once","openDevTools","on","send","window","ipcMain","handle","minimize","maximize","unmaximize","app","quit","exit","platform","DEFAULT_GENERAL_ITEMS","ngockServer","guid","lastFetch","Attachment","Entity","PrimaryGeneratedColumn","Column","AttachmentMessageJoin","Chat","Unique","type","nullable","ChatHandleJoin","ChatMessageJoin","Handle","Message","default","transformer","BooleanTransformer","OneToOne","JoinColumn","ChatRepository","constructor","db","initialize","isConnected","connect","dbPath","getPath","createConnection","name","database","entities","synchronize","logging","createChatFromResponse","res","chat","chatIdentifier","displayName","isArchived","style","createHandleFromResponse","address","country","uncanonicalizedId","createMessageFromResponse","message","handleId","text","subject","error","dateCreated","dateRead","associatedMessageGuid","dateDelivered","isFromMe","isDelayed","isAutoReply","isSystemMessage","isServiceMessage","isForward","cacheRoomnames","isAudioMessage","datePlayed","itemType","groupTitle","groupActionType","isExpired","associatedMessageType","expressiveSendStyleId","timeExpressiveSendStyleId","hasAttachments","Object","keys","includes","attachments","length","saveChat","repo","getRepository","existing","ROWID","findOne","update","save","saveHandle","savedChat","joinRepo","saved","console","log","chj","chatId","saveMessage","cmj","messageId","Config","PrimaryColumn","ConfigRepository","config","loadConfig","items","find","i","convertFromDbValue","value","hasConfigItem","getConfigItem","setConfigItem","saniVal","convertToDbValue","item","create","input","Boolean","Number","test","Date","String","getTime","from","dbValue","to","entityValue","FileSystem","attachmentsDir","setup","setupDirectories","fs","chatRepo","configRepo","socketService","setupComplete","servicesStarted","setupServices","ex","startIpcListeners","fetchChats","initializeDatabases","setupDefaults","key","override","SocketService","socketServer","connected","warn","emitData","loading","syncProgress","loginIsValid","loadingMessage","redirect","now","chats","getChats","emitToUI","count","chatObj","participant","participants","payload","withChats","after","limit","messages","getChatMessages","msg","Math","floor","later","event","args","hasConfig","_","errData","enteredServerAddress","enteredPassword","data","serverAddress","passphrase","Promise","resolve","reject","io","query","Error","withParticipants","emit","status","identifier","offset","before","sort"],"mappings":"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AEC,UAAM,GAAG,CAAX;AAAc3B,SAAK,GAAG,EAAtB;AAA0BD,SAAK,GAAG,IAAlC;AAAwC6B,UAAM,GAAG,IAAjD;AAAuD9B,aAAS,GAAG,KAAnE;AAA0E+B,QAAI,GAAG;AAAjF,GAFJ,EAG8B;AAC1B,WAAO,IAAIZ,OAAJ,CAA+B,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACvD,WAAKvC,YAAL,CAAkB4C,IAAlB,CACI,mBADJ,EAEI;AACIE,kBADJ;AAEIC,cAFJ;AAGI3B,aAHJ;AAIID,aAJJ;AAKI6B,cALJ;AAMI9B,iBANJ;AAOI+B;AAPJ,OAFJ,EAWI7J,GAAG,IAAI;AACH,YAAI,CAAC,GAAD,EAAM,GAAN,EAAWuC,QAAX,CAAoBvC,GAAG,CAACyJ,MAAxB,CAAJ,EAAqC;AACjCP,iBAAO,CAAClJ,GAAG,CAAC8I,IAAL,CAAP;AACH,SAFD,MAEO;AACHK,gBAAM,CAACnJ,GAAG,CAACW,OAAL,CAAN;AACH;AACJ,OAjBL;AAmBH,KApBM,CAAP;AAqBH;;AA1GsB,C,CA6G3B;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA,I;;;;;;;;;;;AC5TA,qC;;;;;;;;;;;ACAA,+B;;;;;;;;;;;ACAA,iC;;;;;;;;;;;ACAA,6C;;;;;;;;;;;ACAA,6C;;;;;;;;;;;ACAA,oC;;;;;;;;;;;ACAA,gC","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/main/main.ts\");\n","import \"reflect-metadata\";\r\nimport { app, BrowserWindow, ipcMain } from \"electron\";\r\nimport * as path from \"path\";\r\nimport * as url from \"url\";\r\n\r\nimport { BackendServer } from \"@server/index\";\r\n\r\nlet win: BrowserWindow | null;\r\nconst BlueBubbles = new BackendServer(win);\r\nBlueBubbles.start();\r\n\r\nconst createWindow = async () => {\r\n    win = new BrowserWindow({\r\n        width: 1200,\r\n        height: 750,\r\n        minWidth: 550,\r\n        minHeight: 350,\r\n        transparent: true,\r\n        frame: false,\r\n        webPreferences: { nodeIntegration: true }\r\n    });\r\n\r\n    if (process.env.NODE_ENV !== \"production\") {\r\n        process.env.ELECTRON_DISABLE_SECURITY_WARNINGS = \"1\"; // eslint-disable-line require-atomic-updates\r\n        win.loadURL(`http://localhost:2004`);\r\n    } else {\r\n        win.loadURL(\r\n            url.format({\r\n                pathname: path.join(__dirname, \"index.html\"),\r\n                protocol: \"file:\",\r\n                slashes: true\r\n            })\r\n        );\r\n    }\r\n\r\n    if (process.env.NODE_ENV !== \"production\") {\r\n        // Open DevTools, see https://github.com/electron/electron/issues/12438 for why we wait for dom-ready\r\n        win.webContents.once(\"dom-ready\", () => {\r\n            win!.webContents.openDevTools();\r\n        });\r\n    }\r\n\r\n    win.on(\"closed\", () => {\r\n        win = null;\r\n    });\r\n\r\n    win.on(\"maximize\", () => {\r\n        if (win && win.webContents) win.webContents.send(\"maximized\");\r\n    });\r\n\r\n    win.on(\"unmaximize\", () => {\r\n        if (win && win.webContents) win.webContents.send(\"unmaximized\");\r\n    });\r\n\r\n    BlueBubbles.window = win;\r\n};\r\n\r\nipcMain.handle(\"minimize-event\", () => {\r\n    if (win && win.webContents) win.minimize();\r\n});\r\n\r\nipcMain.handle(\"maximize-event\", () => {\r\n    if (win && win.webContents) win.maximize();\r\n});\r\n\r\nipcMain.handle(\"unmaximize-event\", () => {\r\n    if (win && win.webContents) win.unmaximize();\r\n});\r\n\r\nipcMain.handle(\"close-event\", () => {\r\n    app.quit();\r\n    app.exit(0);\r\n});\r\n\r\napp.on(\"browser-window-focus\", () => {\r\n    if (win && win.webContents) win.webContents.send(\"focused\");\r\n});\r\n\r\napp.on(\"browser-window-blur\", () => {\r\n    if (win && win.webContents) win.webContents.send(\"blurred\");\r\n});\r\n\r\napp.on(\"ready\", createWindow);\r\n\r\napp.on(\"window-all-closed\", () => {\r\n    if (process.platform !== \"darwin\") {\r\n        app.quit();\r\n    }\r\n});\r\n\r\napp.on(\"activate\", () => {\r\n    if (win === null) {\r\n        createWindow();\r\n    }\r\n});\r\n","export const DEFAULT_GENERAL_ITEMS: { [key: string]: Function } = {\r\n    ngockServer: () => \"\",\r\n    guid: () => \"\",\r\n    lastFetch: () => 0\r\n};\r\n","import { Entity, PrimaryGeneratedColumn, Column } from \"typeorm\";\r\n\r\n@Entity()\r\nexport class Attachment {\r\n    @PrimaryGeneratedColumn()\r\n    ROWID: number;\r\n\r\n    @Column(\"text\")\r\n    guid: string;\r\n\r\n    @Column(\"text\")\r\n    uti: string;\r\n\r\n    @Column(\"text\")\r\n    mimeType: string;\r\n\r\n    @Column(\"integer\")\r\n    transferState: number;\r\n\r\n    @Column(\"integer\")\r\n    isOutgoing: number;\r\n\r\n    @Column(\"integer\")\r\n    transferName: number;\r\n\r\n    @Column(\"integer\")\r\n    totalBytes: number;\r\n\r\n    @Column(\"integer\")\r\n    isSticker: number;\r\n\r\n    @Column(\"integer\")\r\n    hideAttachment: number;\r\n\r\n    @Column(\"integer\")\r\n    blurhash: number;\r\n\r\n    @Column(\"integer\")\r\n    height: number;\r\n\r\n    @Column(\"integer\")\r\n    width: number;\r\n}\r\n","import { Entity, PrimaryGeneratedColumn, Column } from \"typeorm\";\r\n\r\n@Entity()\r\nexport class AttachmentMessageJoin {\r\n    @PrimaryGeneratedColumn()\r\n    ROWID: number;\r\n\r\n    @Column(\"integer\")\r\n    attachmentId: number;\r\n\r\n    @Column(\"integer\")\r\n    messageId: number;\r\n}\r\n","import { Entity, PrimaryGeneratedColumn, Column, Unique } from \"typeorm\";\r\n\r\n@Entity()\r\n@Unique([\"guid\"])\r\nexport class Chat {\r\n    @PrimaryGeneratedColumn()\r\n    ROWID: number;\r\n\r\n    @Column(\"text\")\r\n    guid: string;\r\n\r\n    @Column(\"integer\")\r\n    style: number;\r\n\r\n    @Column(\"text\")\r\n    chatIdentifier: string;\r\n\r\n    @Column(\"integer\")\r\n    isArchived: number;\r\n\r\n    @Column({ type: \"text\", nullable: true })\r\n    displayName: string;\r\n}\r\n","import { Entity, PrimaryGeneratedColumn, Column } from \"typeorm\";\r\n\r\n@Entity()\r\nexport class ChatHandleJoin {\r\n    @PrimaryGeneratedColumn()\r\n    ROWID: number;\r\n\r\n    @Column(\"integer\")\r\n    chatId: number;\r\n\r\n    @Column(\"integer\")\r\n    handleId: number;\r\n}\r\n","import { Entity, PrimaryGeneratedColumn, Column } from \"typeorm\";\r\n\r\n@Entity()\r\nexport class ChatMessageJoin {\r\n    @PrimaryGeneratedColumn()\r\n    ROWID: number;\r\n\r\n    @Column(\"integer\")\r\n    chatId: number;\r\n\r\n    @Column(\"integer\")\r\n    messageId: number;\r\n}\r\n","import { Entity, PrimaryGeneratedColumn, Column, Unique } from \"typeorm\";\r\n\r\n@Entity()\r\n@Unique([\"address\"])\r\nexport class Handle {\r\n    @PrimaryGeneratedColumn()\r\n    ROWID: number;\r\n\r\n    @Column(\"text\")\r\n    address: string;\r\n\r\n    @Column({ type: \"text\", nullable: true })\r\n    country: string;\r\n\r\n    @Column({ type: \"text\", nullable: true })\r\n    uncanonicalizedId: string;\r\n}\r\n","import { Entity, PrimaryGeneratedColumn, Column, JoinColumn, OneToOne } from \"typeorm\";\r\nimport { Handle } from \"@server/databases/chat/entity/\";\r\nimport { BooleanTransformer } from \"@server/databases/transformers\";\r\n\r\n@Entity()\r\nexport class Message {\r\n    @PrimaryGeneratedColumn()\r\n    ROWID: number;\r\n\r\n    @Column(\"integer\")\r\n    handleId: number;\r\n\r\n    @Column(\"text\")\r\n    guid: string;\r\n\r\n    @Column(\"text\")\r\n    text: string;\r\n\r\n    @Column({ type: \"text\", nullable: true })\r\n    subject: string;\r\n\r\n    @Column({ type: \"text\", nullable: true })\r\n    country: string;\r\n\r\n    @Column(\"integer\")\r\n    error: number;\r\n\r\n    @Column({ type: \"integer\", nullable: false })\r\n    dateCreated: number;\r\n\r\n    @Column({ type: \"integer\", nullable: false, default: 0 })\r\n    dateRead: number;\r\n\r\n    @Column({ type: \"integer\", nullable: false, default: 0 })\r\n    dateDelivered: number;\r\n\r\n    @Column({ type: \"integer\", transformer: BooleanTransformer })\r\n    isFromMe: boolean;\r\n\r\n    @Column({ type: \"integer\", transformer: BooleanTransformer })\r\n    isDelayed: boolean;\r\n\r\n    @Column({ type: \"integer\", transformer: BooleanTransformer })\r\n    isAutoReply: boolean;\r\n\r\n    @Column({ type: \"integer\", transformer: BooleanTransformer })\r\n    isSystemMessage: boolean;\r\n\r\n    @Column({ type: \"integer\", transformer: BooleanTransformer })\r\n    isServiceMessage: boolean;\r\n\r\n    @Column({ type: \"integer\", transformer: BooleanTransformer })\r\n    isForward: boolean;\r\n\r\n    @Column({ type: \"integer\", transformer: BooleanTransformer })\r\n    isArchived: boolean;\r\n\r\n    @Column({ type: \"text\", nullable: true })\r\n    cacheRoomnames: string;\r\n\r\n    @Column({ type: \"integer\", transformer: BooleanTransformer, default: false })\r\n    isAudioMessage: boolean;\r\n\r\n    @Column(\"integer\")\r\n    datePlayed: number;\r\n\r\n    @Column(\"integer\")\r\n    itemType: number;\r\n\r\n    @Column({ type: \"text\", nullable: true })\r\n    groupTitle: string;\r\n\r\n    @Column(\"integer\")\r\n    groupActionType: number;\r\n\r\n    @Column({ type: \"integer\", transformer: BooleanTransformer, default: false })\r\n    isExpired: boolean;\r\n\r\n    @Column({ type: \"text\", nullable: true })\r\n    associatedMessageGuid: string;\r\n\r\n    @Column({ type: \"text\", nullable: false, default: 0 })\r\n    associatedMessageType: number;\r\n\r\n    @Column({ type: \"text\", nullable: true })\r\n    expressiveSendStyleId: string;\r\n\r\n    @Column({ type: \"integer\", nullable: false, default: 0 })\r\n    timeExpressiveSendStyleId: number;\r\n\r\n    @Column({ type: \"integer\", transformer: BooleanTransformer, default: false })\r\n    hasAttachments: boolean;\r\n\r\n    @OneToOne(type => Handle)\r\n    @JoinColumn()\r\n    handle: Handle;\r\n}\r\n","import { Attachment } from \"./Attachment\";\r\nimport { AttachmentMessageJoin } from \"./AttachmentMessageJoin\";\r\nimport { Chat } from \"./Chat\";\r\nimport { Handle } from \"./Handle\";\r\nimport { ChatHandleJoin } from \"./ChatHandleJoin\";\r\nimport { Message } from \"./Message\";\r\nimport { ChatMessageJoin } from \"./ChatMessageJoin\";\r\n\r\nexport { Attachment, AttachmentMessageJoin, Chat, Handle, ChatHandleJoin, Message, ChatMessageJoin };\r\n","import { app } from \"electron\";\r\nimport { createConnection, Connection } from \"typeorm\";\r\nimport { ChatResponse, HandleResponse, MessageResponse } from \"@server/types\";\r\n\r\nimport { Attachment, AttachmentMessageJoin, Chat, Handle, ChatHandleJoin, Message, ChatMessageJoin } from \"./entity\";\r\n\r\nexport class ChatRepository {\r\n    db: Connection = null;\r\n\r\n    constructor() {\r\n        this.db = null;\r\n    }\r\n\r\n    async initialize(): Promise<Connection> {\r\n        if (this.db) {\r\n            if (!this.db.isConnected) await this.db.connect();\r\n            return this.db;\r\n        }\r\n\r\n        let dbPath = `${app.getPath(\"userData\")}/chat.db`;\r\n        if (process.env.NODE_ENV !== \"production\") {\r\n            dbPath = `${app.getPath(\"userData\")}/BlueBubbles-Desktop-App/chat.db`;\r\n        }\r\n\r\n        this.db = await createConnection({\r\n            name: \"chat\",\r\n            type: \"sqlite\",\r\n            database: dbPath,\r\n            entities: [Attachment, AttachmentMessageJoin, Chat, Handle, ChatHandleJoin, Message, ChatMessageJoin],\r\n            synchronize: true,\r\n            logging: false\r\n        });\r\n\r\n        return this.db;\r\n    }\r\n\r\n    static createChatFromResponse(res: ChatResponse): Chat {\r\n        const chat = new Chat();\r\n        chat.guid = res.guid;\r\n        chat.chatIdentifier = res.chatIdentifier;\r\n        chat.displayName = res.displayName;\r\n        chat.isArchived = res.isArchived ? 1 : 0;\r\n        chat.style = res.style;\r\n        return chat;\r\n    }\r\n\r\n    static createHandleFromResponse(res: HandleResponse): Handle {\r\n        const handle = new Handle();\r\n        handle.address = res.address;\r\n        handle.country = res.country;\r\n        handle.uncanonicalizedId = res.uncanonicalizedId;\r\n        return handle;\r\n    }\r\n\r\n    static createMessageFromResponse(res: MessageResponse): Message {\r\n        const message = new Message();\r\n        message.handleId = res.handleId;\r\n        message.guid = res.guid;\r\n        message.text = res.text;\r\n        message.subject = res.subject;\r\n        message.country = res.country;\r\n        message.error = res.error;\r\n        message.dateCreated = res.dateCreated ?? 0;\r\n        message.dateRead = res.dateRead ?? 0;\r\n        message.associatedMessageGuid = res.associatedMessageGuid;\r\n        message.dateDelivered = res.dateDelivered ?? 0;\r\n        message.isFromMe = res.isFromMe;\r\n        message.isDelayed = res.isDelayed;\r\n        message.isAutoReply = res.isAutoReply;\r\n        message.isSystemMessage = res.isSystemMessage;\r\n        message.isServiceMessage = res.isServiceMessage;\r\n        message.isForward = res.isForward;\r\n        message.isArchived = res.isArchived;\r\n        message.cacheRoomnames = res.cacheRoomnames;\r\n        message.isAudioMessage = res.isAudioMessage;\r\n        message.datePlayed = res.datePlayed ?? 0;\r\n        message.itemType = res.itemType;\r\n        message.groupTitle = res.groupTitle;\r\n        message.groupActionType = res.groupActionType;\r\n        message.isExpired = res.isExpired;\r\n        message.associatedMessageGuid = res.associatedMessageGuid;\r\n        message.associatedMessageType = res.associatedMessageType ?? 0;\r\n        message.expressiveSendStyleId = res.expressiveSendStyleId;\r\n        message.timeExpressiveSendStyleId = res.timeExpressiveSendStyleId ?? 0;\r\n        message.hasAttachments = Object.keys(res).includes(\"attachments\") && res.attachments.length > 0;\r\n        return message;\r\n    }\r\n\r\n    async saveChat(chat: Chat): Promise<Chat> {\r\n        const repo = this.db.getRepository(Chat);\r\n        const existing = chat.ROWID ? chat : await repo.findOne({ guid: chat.guid });\r\n        if (existing) {\r\n            if (existing.displayName !== chat.displayName) {\r\n                // Right now, I don't think anything but the displayName will change\r\n                await repo.update(existing, { displayName: chat.displayName });\r\n            }\r\n\r\n            return existing;\r\n        }\r\n\r\n        // If it doesn't exist, create it\r\n        return repo.save(chat);\r\n    }\r\n\r\n    async saveHandle(chat: Chat, handle: Handle): Promise<Handle> {\r\n        // Always save the chat first\r\n        const savedChat = await this.saveChat(chat);\r\n\r\n        // Save the handle\r\n        const repo = this.db.getRepository(Handle);\r\n        const existing = handle.ROWID ? handle : await repo.findOne({ address: handle.address });\r\n        if (existing) return existing;\r\n\r\n        // We don't ever really need to update a handle\r\n        // so only save it when it doesn't exist\r\n        const joinRepo = this.db.getRepository(ChatHandleJoin);\r\n        const saved: Handle = await repo.save(handle);\r\n\r\n        // Create the join table data\r\n        console.log(saved.ROWID);\r\n        console.log(savedChat.ROWID);\r\n        const chj: ChatHandleJoin = new ChatHandleJoin();\r\n        chj.chatId = savedChat.ROWID;\r\n        chj.handleId = saved.ROWID;\r\n        await joinRepo.save(chj);\r\n\r\n        // Return the results\r\n        return saved;\r\n    }\r\n\r\n    async saveMessage(chat: Chat, message: Message): Promise<Message> {\r\n        // Always save the chat first\r\n        const savedChat = await this.saveChat(chat);\r\n\r\n        // Save the handle\r\n        const repo = this.db.getRepository(Message);\r\n        const existing = message.ROWID ? message : await repo.findOne({ guid: message.guid });\r\n\r\n        // If it exists, check if anything has really changed before updating\r\n        if (existing) {\r\n            if (\r\n                existing.dateDelivered !== message.dateDelivered ||\r\n                existing.dateRead !== message.dateRead ||\r\n                existing.error !== message.error ||\r\n                existing.isArchived !== message.isArchived ||\r\n                existing.datePlayed !== message.datePlayed\r\n            ) {\r\n                await repo.update(existing, {\r\n                    dateDelivered: message.datePlayed,\r\n                    dateRead: message.dateRead,\r\n                    error: message.error,\r\n                    isArchived: message.isArchived,\r\n                    datePlayed: message.datePlayed\r\n                });\r\n            }\r\n\r\n            return existing;\r\n        }\r\n\r\n        // We don't ever really need to update a handle\r\n        // so only save it when it doesn't exist\r\n        const joinRepo = this.db.getRepository(ChatMessageJoin);\r\n        const saved: Message = await repo.save(message);\r\n\r\n        // Create the join table data\r\n        const cmj: ChatMessageJoin = new ChatMessageJoin();\r\n        cmj.chatId = savedChat.ROWID;\r\n        cmj.messageId = saved.ROWID;\r\n        await joinRepo.save(cmj);\r\n\r\n        return saved;\r\n    }\r\n}\r\n","import { Entity, Column, PrimaryColumn } from \"typeorm\";\r\n\r\n@Entity()\r\nexport class Config {\r\n    @PrimaryColumn(\"text\", { name: \"name\" })\r\n    name: string;\r\n\r\n    @Column(\"text\", { name: \"value\", nullable: true })\r\n    value: string;\r\n}\r\n","import { Config } from \"./Config\";\r\n\r\nexport { Config };\r\n","import { app } from \"electron\";\r\nimport { createConnection, Connection, Long } from \"typeorm\";\r\n\r\nimport { Config } from \"./entity\";\r\n\r\nexport class ConfigRepository {\r\n    db: Connection = null;\r\n\r\n    config: { [key: string]: any };\r\n\r\n    constructor() {\r\n        this.db = null;\r\n        this.config = {};\r\n    }\r\n\r\n    async initialize(): Promise<Connection> {\r\n        if (this.db) {\r\n            if (!this.db.isConnected) await this.db.connect();\r\n            return this.db;\r\n        }\r\n\r\n        let dbPath = `${app.getPath(\"userData\")}/config.db`;\r\n        if (process.env.NODE_ENV !== \"production\") {\r\n            dbPath = `${app.getPath(\"userData\")}/BlueBubbles-Desktop-App/config.db`;\r\n        }\r\n\r\n        this.db = await createConnection({\r\n            name: \"config\",\r\n            type: \"sqlite\",\r\n            database: dbPath,\r\n            entities: [Config],\r\n            synchronize: true,\r\n            logging: false\r\n        });\r\n\r\n        // Load default config items\r\n        await this.loadConfig();\r\n        return this.db;\r\n    }\r\n\r\n    private async loadConfig() {\r\n        const repo = this.db.getRepository(Config);\r\n        const items: Config[] = await repo.find();\r\n        for (const i of items) this.config[i.name] = ConfigRepository.convertFromDbValue(i.value);\r\n    }\r\n\r\n    /**\r\n     * Checks if the config has an item\r\n     *\r\n     * @param name The name of the item to check for\r\n     */\r\n    hasConfigItem(name: string): boolean {\r\n        return Object.keys(this.config).includes(name);\r\n    }\r\n\r\n    /**\r\n     * Retrieves a config item from the cache\r\n     *\r\n     * @param name The name of the config item\r\n     */\r\n    getConfigItem(name: string): Date | string | boolean | number {\r\n        if (!Object.keys(this.config).includes(name)) return null;\r\n        return ConfigRepository.convertFromDbValue(this.config[name]);\r\n    }\r\n\r\n    /**\r\n     * Sets a config item in the database\r\n     *\r\n     * @param name The name of the config item\r\n     * @param value The value for the config item\r\n     */\r\n    async setConfigItem(name: string, value: Date | string | boolean | number): Promise<void> {\r\n        const saniVal = ConfigRepository.convertToDbValue(value);\r\n        const repo = this.db.getRepository(Config);\r\n        const item = await repo.findOne({ name });\r\n        if (item) {\r\n            item.value = saniVal;\r\n            await repo.save(item);\r\n        } else {\r\n            await repo.create({ name, value: saniVal });\r\n        }\r\n\r\n        this.config[name] = saniVal;\r\n    }\r\n\r\n    /**\r\n     * Converts a generic string value from the database\r\n     * to its' corresponding correct typed value\r\n     *\r\n     * @param input The value straight from the database\r\n     */\r\n    private static convertFromDbValue(input: string): any {\r\n        if (input === \"1\" || input === \"0\") return Boolean(Number(input));\r\n        if (/^-{0,1}\\d+$/.test(input)) return Number(input);\r\n        return input;\r\n    }\r\n\r\n    /**\r\n     * Converts a typed database value input to a string.\r\n     *\r\n     * @param input The typed database value\r\n     */\r\n    private static convertToDbValue(input: any): string {\r\n        if (typeof input === \"boolean\") return input ? \"1\" : \"0\";\r\n        if (input instanceof Date) return String(input.getTime());\r\n        return String(input);\r\n    }\r\n}\r\n","import { ValueTransformer } from \"typeorm\";\r\n\r\nexport const BooleanTransformer: ValueTransformer = {\r\n    from: dbValue => Boolean(dbValue),\r\n    to: entityValue => Number(entityValue)\r\n};\r\n","import { BooleanTransformer } from \"./BooleanTransformer\";\r\n\r\nexport { BooleanTransformer };\r\n","import * as fs from \"fs\";\r\nimport * as path from \"path\";\r\nimport { app } from \"electron\";\r\n\r\nexport class FileSystem {\r\n    public attachmentsDir = `Attachments`;\r\n\r\n    async setup(): Promise<void> {\r\n        this.setupDirectories();\r\n    }\r\n\r\n    // Creates required directories\r\n    setupDirectories(): void {\r\n        if (!fs.existsSync(this.attachmentsDir)) fs.mkdirSync(this.attachmentsDir);\r\n    }\r\n}\r\n","import { ipcMain, BrowserWindow } from \"electron\";\r\nimport { Connection } from \"typeorm\";\r\n\r\n// Config and FileSystem Imports\r\nimport { Config } from \"@server/databases/config/entity/Config\";\r\nimport { FileSystem } from \"@server/fileSystem\";\r\nimport { DEFAULT_GENERAL_ITEMS } from \"@server/constants\";\r\n\r\n// Database Imports\r\nimport { ConfigRepository } from \"@server/databases/config\";\r\nimport { ChatRepository } from \"@server/databases/chat\";\r\n\r\n// Service Imports\r\nimport { SocketService } from \"@server/services\";\r\n\r\nimport { ResponseFormat, ChatResponse, MessageResponse } from \"./types\";\r\nimport { GetChatMessagesParams } from \"./services/socket/types\";\r\n\r\nexport class BackendServer {\r\n    window: BrowserWindow;\r\n\r\n    db: Connection;\r\n\r\n    chatRepo: ChatRepository;\r\n\r\n    configRepo: ConfigRepository;\r\n\r\n    socketService: SocketService;\r\n\r\n    fs: FileSystem;\r\n\r\n    setupComplete: boolean;\r\n\r\n    servicesStarted: boolean;\r\n\r\n    constructor(window: BrowserWindow) {\r\n        this.window = window;\r\n\r\n        // Databases\r\n        this.chatRepo = null;\r\n        this.configRepo = null;\r\n\r\n        // Other helpers\r\n        this.fs = null;\r\n\r\n        // Services\r\n        this.socketService = null;\r\n\r\n        this.setupComplete = false;\r\n        this.servicesStarted = false;\r\n    }\r\n\r\n    /**\r\n     * Starts the back-end \"server\"\r\n     */\r\n    async start(): Promise<void> {\r\n        console.log(\"Starting BlueBubbles Backend...\");\r\n        await this.setup();\r\n\r\n        try {\r\n            console.log(\"Launching Services..\");\r\n            await this.setupServices();\r\n        } catch (ex) {\r\n            console.log(\"Failed to launch server services.\", \"error\");\r\n        }\r\n\r\n        console.log(\"Starting Configuration IPC Listeners...\");\r\n        this.startIpcListeners();\r\n\r\n        // Fetch the chats upon start\r\n        console.log(\"Syncing initial chats...\");\r\n        await this.fetchChats();\r\n    }\r\n\r\n    /**\r\n     * Sets up the server by initializing a \"filesystem\" and other\r\n     * tasks such as setting up the databases and internal services\r\n     */\r\n    private async setup(): Promise<void> {\r\n        console.log(\"Initializing database...\");\r\n        await this.initializeDatabases();\r\n\r\n        try {\r\n            console.log(\"Initializing filesystem...\");\r\n            this.fs = new FileSystem();\r\n            this.fs.setup();\r\n        } catch (ex) {\r\n            console.log(`!Failed to setup filesystem! ${ex.message}`);\r\n        }\r\n\r\n        this.setupComplete = true;\r\n    }\r\n\r\n    private async initializeDatabases() {\r\n        try {\r\n            console.log(\"Connecting to messaging database...\");\r\n            this.chatRepo = new ChatRepository();\r\n            await this.chatRepo.initialize();\r\n        } catch (ex) {\r\n            console.log(`Failed to connect to messaging database! ${ex.message}`);\r\n        }\r\n\r\n        try {\r\n            console.log(\"Connecting to settings database...\");\r\n            this.configRepo = new ConfigRepository();\r\n            await this.configRepo.initialize();\r\n        } catch (ex) {\r\n            console.log(`Failed to connect to settings database! ${ex.message}`);\r\n        }\r\n\r\n        await this.setupDefaults();\r\n    }\r\n\r\n    /**\r\n     * Sets up default database values for configuration items\r\n     */\r\n    private async setupDefaults(): Promise<void> {\r\n        try {\r\n            const repo = this.configRepo.db.getRepository(Config);\r\n            for (const key of Object.keys(DEFAULT_GENERAL_ITEMS)) {\r\n                const item = await repo.findOne({ name: key });\r\n                if (!item) await this.configRepo.setConfigItem(key, DEFAULT_GENERAL_ITEMS[key]());\r\n            }\r\n        } catch (ex) {\r\n            console.log(`Failed to setup default configurations! ${ex.message}`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets up any internal services that need to be instantiated and configured\r\n     */\r\n    private async setupServices(override = false) {\r\n        if (this.servicesStarted && !override) return;\r\n\r\n        try {\r\n            console.log(\"Initializing up socket connection...\");\r\n            this.socketService = new SocketService(this.db, this.chatRepo, this.configRepo, this.fs);\r\n\r\n            // Start the socket service\r\n            await this.socketService.start();\r\n        } catch (ex) {\r\n            console.log(`Failed to setup socket service! ${ex.message}`);\r\n        }\r\n\r\n        this.servicesStarted = true;\r\n    }\r\n\r\n    /**\r\n     * Fetches chats from the server based on the last time we fetched data.\r\n     * This is what the server itself calls when it is refreshed or reloaded.\r\n     * The front-end _should not_ call this function.\r\n     */\r\n    async fetchChats(): Promise<void> {\r\n        if (!this.socketService?.socketServer?.connected) {\r\n            console.warn(\"Cannot fetch chats when no socket is connected!\");\r\n            return;\r\n        }\r\n\r\n        const emitData = {\r\n            loading: true,\r\n            syncProgress: 0,\r\n            loginIsValid: true,\r\n            loadingMessage: \"Connected to the server! Fetching chats...\",\r\n            redirect: null\r\n        };\r\n\r\n        const now = new Date();\r\n        const lastFetch = this.configRepo.getConfigItem(\"lastFetch\") as number;\r\n        const chats: ChatResponse[] = await this.socketService.getChats({});\r\n\r\n        emitData.syncProgress = 1;\r\n        emitData.loadingMessage = `Got ${chats.length} chats from the server. Fetching messages since ${new Date(\r\n            lastFetch\r\n        )}`;\r\n        console.log(emitData.loadingMessage);\r\n        this.emitToUI(\"setup-update\", emitData);\r\n\r\n        // Iterate over each chat and fetch their messages\r\n        let count = 1;\r\n        for (const chat of chats) {\r\n            // First, emit the chat to the front-end\r\n            this.emitToUI(\"chat\", chat);\r\n\r\n            // Second, save the chat to the database\r\n            const chatObj = ChatRepository.createChatFromResponse(chat);\r\n            const savedChat = await this.chatRepo.saveChat(chatObj);\r\n\r\n            // Third, save the participants for the chat\r\n            for (const participant of chat.participants ?? []) {\r\n                const handle = ChatRepository.createHandleFromResponse(participant);\r\n                await this.chatRepo.saveHandle(savedChat, handle);\r\n            }\r\n\r\n            // Build message request params\r\n            const payload: GetChatMessagesParams = { withChats: false };\r\n            if (lastFetch) {\r\n                payload.after = lastFetch;\r\n                // Since we are fetching after a date, we want to get as much as we can\r\n                payload.limit = 1000;\r\n            }\r\n\r\n            // Third, let's fetch the messages from the DB\r\n            const messages: MessageResponse[] = await this.socketService.getChatMessages(chat.guid, payload);\r\n            emitData.loadingMessage = `Got ${messages.length} messages for chat, [${chat.displayName ||\r\n                chat.chatIdentifier}] the server.`;\r\n            console.log(emitData.loadingMessage);\r\n\r\n            // Fourth, let's save the messages to the DB\r\n            for (const message of messages) {\r\n                const msg = ChatRepository.createMessageFromResponse(message);\r\n                await this.chatRepo.saveMessage(savedChat, msg);\r\n            }\r\n\r\n            // Lastly, save the attachments (if any)\r\n            // TODO\r\n\r\n            emitData.syncProgress = Math.floor((count / chats.length) * 100);\r\n            this.emitToUI(\"setup-update\", emitData);\r\n            count += 1;\r\n        }\r\n\r\n        // Tell the UI we are finished\r\n        const later = new Date();\r\n        emitData.redirect = \"/messaging\";\r\n        emitData.syncProgress = 100;\r\n        emitData.loadingMessage = `Finished fetching messages from socket server in [${later.getTime() -\r\n            now.getTime()} ms].`;\r\n        console.log(emitData.loadingMessage);\r\n        this.emitToUI(\"setup-update\", emitData);\r\n\r\n        // Save the last fetch date\r\n        this.configRepo.setConfigItem(\"lastFetch\", now);\r\n    }\r\n\r\n    private startIpcListeners() {\r\n        ipcMain.handle(\"set-config\", async (event, args) => {\r\n            for (const item of Object.keys(args)) {\r\n                const hasConfig = this.configRepo.hasConfigItem(item);\r\n                if (hasConfig && this.configRepo.getConfigItem(item) !== args[item]) {\r\n                    await this.configRepo.setConfigItem(item, args[item]);\r\n                }\r\n            }\r\n\r\n            this.emitToUI(\"config-update\", this.configRepo.config);\r\n            return this.configRepo.config;\r\n        });\r\n\r\n        ipcMain.handle(\"start-socket-setup\", async (_, args) => {\r\n            const errData = {\r\n                loading: false,\r\n                syncProgress: 0,\r\n                loginIsValid: false,\r\n                loadingMessage: \"Setup is starting...\"\r\n            };\r\n\r\n            // Make sure the config DB is setup\r\n            if (!this.configRepo || !this.configRepo.db.isConnected) {\r\n                errData.loadingMessage = \"Configuration DB is not yet setup!\";\r\n                return this.emitToUI(\"setup-update\", errData);\r\n            }\r\n\r\n            // Save the config items\r\n            await this.configRepo.setConfigItem(\"serverAddress\", args.enteredServerAddress);\r\n            await this.configRepo.setConfigItem(\"passphrase\", args.enteredPassword);\r\n\r\n            try {\r\n                // If we can't even connect, GTFO\r\n                await this.socketService.start();\r\n            } catch {\r\n                errData.loadingMessage = \"Could not connect to the server!\";\r\n                return this.emitToUI(\"setup-update\", errData);\r\n            }\r\n\r\n            // If credentials are incorrect, you are disconnected right away. So check that\r\n            if (!this.socketService.socketServer.connected) {\r\n                errData.loadingMessage = \"Disconnected from socket server! Credentials may be incorrect!\";\r\n                return this.emitToUI(\"setup-update\", errData);\r\n            }\r\n\r\n            // Start fetching the data\r\n            this.fetchChats();\r\n            return null; // Consistent return\r\n        });\r\n    }\r\n\r\n    private emitToUI(event: string, data: any) {\r\n        if (this.window) this.window.webContents.send(event, data);\r\n    }\r\n}\r\n","import { SocketService } from \"./socket\";\r\n\r\nexport { SocketService};","import * as io from \"socket.io-client\";\r\n\r\n// Internal Libraries\r\nimport { FileSystem } from \"@server/fileSystem\";\r\nimport { ResponseFormat, ChatResponse, MessageResponse } from \"@server/types\";\r\n\r\n// Database Dependency Imports\r\nimport { ConfigRepository } from \"@server/databases/config\";\r\nimport { ChatRepository } from \"@server/databases/chat\";\r\nimport { Connection } from \"typeorm\";\r\n\r\nimport { GetChatsParams, GetChatMessagesParams } from \"./types\";\r\n\r\nexport class SocketService {\r\n    db: Connection;\r\n\r\n    socketServer: SocketIOClient.Socket;\r\n\r\n    chatRepo: ChatRepository;\r\n\r\n    configRepo: ConfigRepository;\r\n\r\n    fs: FileSystem;\r\n\r\n    serverAddress: string;\r\n\r\n    passphrase: string;\r\n\r\n    /**\r\n     * Starts up the initial Socket.IO connection and initializes other\r\n     * required classes and variables\r\n     *\r\n     * @param chatRepo The iMessage database repository\r\n     * @param configRepo The app's settings repository\r\n     * @param fs The filesystem class handler\r\n     */\r\n    constructor(db: Connection, chatRepo: ChatRepository, configRepo: ConfigRepository, fs: FileSystem) {\r\n        this.db = db;\r\n\r\n        this.socketServer = null;\r\n        this.chatRepo = chatRepo;\r\n        this.configRepo = configRepo;\r\n        this.fs = fs;\r\n    }\r\n\r\n    /**\r\n     * Sets up the socket listeners\r\n     */\r\n    async start(): Promise<boolean> {\r\n        if (\r\n            !this.configRepo ||\r\n            !this.configRepo.getConfigItem(\"serverAddress\") ||\r\n            !this.configRepo.getConfigItem(\"passphrase\")\r\n        ) {\r\n            console.error(\"Setup has not been completed!\");\r\n            return false;\r\n        }\r\n\r\n        return new Promise((resolve, reject) => {\r\n            this.socketServer = io(this.configRepo.getConfigItem(\"serverAddress\") as string, {\r\n                query: {\r\n                    guid: this.configRepo.getConfigItem(\"passphrase\")\r\n                }\r\n            });\r\n\r\n            this.socketServer.on(\"connect\", () => {\r\n                console.log(\"Connected to server via socket.\");\r\n                resolve(true);\r\n            });\r\n\r\n            this.socketServer.on(\"disconnect\", () => {\r\n                console.log(\"Disconnected from socket server.\");\r\n                reject(new Error(\"Disconnected from socket.\"));\r\n            });\r\n\r\n            this.socketServer.on(\"error\", () => {\r\n                console.log(\"Unable to connect to server.\");\r\n                reject(new Error(\"Unable to connect to server.\"));\r\n            });\r\n        });\r\n    }\r\n\r\n    async getChats({ withParticipants = true }: GetChatsParams): Promise<ChatResponse[]> {\r\n        return new Promise<ChatResponse[]>((resolve, reject) => {\r\n            this.socketServer.emit(\"get-chats\", { withParticipants }, (res: ResponseFormat) => {\r\n                if ([200, 201].includes(res.status)) {\r\n                    resolve(res.data as ChatResponse[]);\r\n                } else {\r\n                    reject(res.message);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    async getChatMessages(\r\n        identifier: string,\r\n        { offset = 0, limit = 25, after = null, before = null, withChats = false, sort = \"DESC\" }: GetChatMessagesParams\r\n    ): Promise<MessageResponse[]> {\r\n        return new Promise<MessageResponse[]>((resolve, reject) => {\r\n            this.socketServer.emit(\r\n                \"get-chat-messages\",\r\n                {\r\n                    identifier,\r\n                    offset,\r\n                    limit,\r\n                    after,\r\n                    before,\r\n                    withChats,\r\n                    sort\r\n                },\r\n                res => {\r\n                    if ([200, 201].includes(res.status)) {\r\n                        resolve(res.data as MessageResponse[]);\r\n                    } else {\r\n                        reject(res.message);\r\n                    }\r\n                }\r\n            );\r\n        });\r\n    }\r\n}\r\n\r\n// import {createConnection, getManager} from \"typeorm\";\r\n// import {Handle} from \"../entities/messaging/Handle\";\r\n// import {chatPrevGetAllAction} from \"../actions/ChatPrevGetAllAction\";\r\n\r\n// //Connect to server with socket\r\n// export async function ConnectToServer(url, aGuid){\r\n\r\n// }\r\n\r\n// createConnection({\r\n//     type: \"sqlite\",\r\n//     database: \"src/main/server/db/messaging.db\",\r\n//     entities: [\r\n//         Handle\r\n//     ],\r\n//     synchronize: true,\r\n//     logging: false\r\n// }).then(async connection => {\r\n//     const io = require('socket.io-client')\r\n//     const socket = io(\"\",{\r\n//     query: {\r\n//         guid: \"\"\r\n//     }\r\n//     })\r\n\r\n//     // On Socket Connect\r\n//     socket.on('connect', () => {\r\n//     console.log(socket.connected)\r\n//     const firstAppStartUp = true;\r\n\r\n//     if (firstAppStartUp){\r\n//         //Get all chats from server and save locally\r\n//         // initFromServer();\r\n//         GetAllChatsFromServer();\r\n//         console.log(\"here\");\r\n//     } else{\r\n\r\n//     }\r\n//     });\r\n\r\n//     // let handle = new Handle();\r\n//     // handle.address = \"\";\r\n\r\n//     //Get All Chats\r\n//     function GetAllChatsFromServer() {\r\n//         socket.emit('get-chats',true,(data) => {\r\n//         console.log(data.data[0].participants[0].address);\r\n//         await GetHandle();\r\n//         chatPrevGetAllAction();\r\n\r\n//         //Get Handle\r\n//         asyncfunction GetHandle() {\r\n//             let handleRepository = connection.getRepository(Handle);\r\n//             let i;\r\n//             for(i=0; i < Object.keys(data.data).length; i++){\r\n//                 let handle = new Handle();\r\n//                 if(data.data[i].participants[0].address != null) {\r\n//                     handle.address = data.data[i].participants[0].address;\r\n//                 };\r\n//                 if(data.data[i].participants[0].country != null) {\r\n//                     handle.country = data.data[i].participants[0].country;\r\n//                 };\r\n//                 if(data.data[i].participants[0].uncanonicalizedId != null) {\r\n//                     handle.uncanonicalizedId = data.data[i].participants[0].uncanonicalizedId;\r\n//                 } else{\r\n//                     handle.uncanonicalizedId = \"X:XX PM\";\r\n//                 };\r\n//                 // console.log(handle.address);\r\n//                 try {\r\n//                     // return connection.manager\r\n//                     //             .save(handle)\r\n//                     //             .then(handle => {\r\n//                     //                 console.log(\"handle has been saved. handle address is\", handle.address);\r\n//                     //             });\r\n//                     handleRepository.save(handle);\r\n//                     console.log(\"Handle saved\");\r\n//                 } catch (err){\r\n//                     console.log(err);\r\n//                 }\r\n\r\n//             }\r\n//         }\r\n\r\n//             return data\r\n//         })\r\n//     }\r\n\r\n// }).catch(error => console.log(\"TypeORM connection error: \", error));\r\n\r\n// // const initFromServer = {\r\n\r\n// // }\r\n\r\n// //Get A Single Chat by guid\r\n// function GetSingleChat(guid){\r\n//     socket.emit(\"get-chat\",{chatGuid: guid}, (data) =>{\r\n//         console.log(data.data)\r\n//         return data.data\r\n//     })\r\n// }\r\n\r\n// //Get All Messages In A Chat\r\n// function GetChatMessages(guid){\r\n//     socket.emit(\"get-chat-messages\",{identifier: guid}, (data) =>{\r\n//         console.log(data.data)\r\n//         return data.data\r\n//     })\r\n// }\r\n\r\n// //Get Most Recent Message For A Given guid\r\n// function GetMostRecentMessage(guid){\r\n//     socket.emit(\"get-last-chat-message\",{identifier: guid}, (data) =>{\r\n//         console.log(data)\r\n//         return data\r\n//     })\r\n// }\r\n\r\n// //Get Attachment By guid\r\n// function GetAttachmentByGUID(guid){\r\n//     socket.emit(\"get-attatchment\",{identifier: guid}, (data) =>{\r\n//         console.log(data)\r\n//         return data\r\n//     })\r\n// }\r\n\r\n// //Get Attachment Chunk By guid\r\n// function GetAttachmentChunkByGUID(guid){\r\n//     socket.emit(\"get-attatchment-chunk\",{identifier: guid}, (data) =>{\r\n//         console.log(data)\r\n//         return data\r\n//     })\r\n// }\r\n\r\n// //Get Participants In A Chat\r\n// function GetChatParticipants(guid){\r\n//     socket.emit(\"get-participants\",{identifier: guid}, (data) =>{\r\n//         console.log(data)\r\n//         return data\r\n//     })\r\n// }\r\n\r\n// //Send A Message\r\n// function SendMessage(chatGuid, myMessage) {\r\n//     socket.emit(\"send-message\",{guid: chatGuid, message: myMessage}, (data) =>{\r\n//         console.log(data)\r\n//         return data\r\n//     })\r\n// }\r\n\r\n// //Send A Message With Chunked Attachments\r\n// function SendMessageWithAttachment(guid, myMessage,myAttachmentData){\r\n//     socket.emit(\"send-message-chunk\",{guid: guid, message: myMessage, attachmentData: myAttachmentData}, (data) =>{\r\n//         console.log(data)\r\n//         return data\r\n//     })\r\n// }\r\n\r\n// //Start A Chat\r\n// function NewChat(guid, chatParticipants){\r\n//     socket.emit(\"start-chat\",{identifier: guid, participants: chatParticipants}, (data) =>{\r\n//         console.log(data)\r\n//         return data\r\n//     })\r\n// }\r\n\r\n// //Rename A Group Chat\r\n// function RenameGroupChat(guid, newGroupName) {\r\n//     socket.emit(\"rename-group\",{identifier: guid, newName: newGroupName}, (data) =>{\r\n//         console.log(data)\r\n//         return data\r\n//     })\r\n// }\r\n\r\n// //Add A Participant To Chat\r\n// function AddParticipantToChat(guid, participantAddress){\r\n//     socket.emit(\"add-participant\",{identifier: guid, address: participantAddress}, (data) =>{\r\n//         console.log(data)\r\n//         return data\r\n//     })\r\n// }\r\n\r\n// //Remove A Participant To Chat\r\n// function RemoveParticipantToChat(guid, participantAddress){\r\n//     socket.emit(\"remove-participant\",{identifier: guid, address: participantAddress}, (data) =>{\r\n//         console.log(data)\r\n//         return data\r\n//     })\r\n// }\r\n\r\n// //Send Reaction (NOT IMPLEMENTED IN SERVER)\r\n// function SendReaction(guid) {\r\n//     socket.emit(\"send-reaction\",{identifier: guid}, (data) =>{\r\n//         console.log(data)\r\n//     })\r\n// }\r\n","module.exports = require(\"electron\");","module.exports = require(\"fs\");","module.exports = require(\"path\");","module.exports = require(\"reflect-metadata\");","module.exports = require(\"socket.io-client\");","module.exports = require(\"typeorm\");","module.exports = require(\"url\");"],"sourceRoot":""}