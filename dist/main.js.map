{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/main/main.ts","webpack:///./src/main/server/constants.ts","webpack:///./src/main/server/databases/chat/entity/Attachment.ts","webpack:///./src/main/server/databases/chat/entity/AttachmentMessageJoin.ts","webpack:///./src/main/server/databases/chat/entity/Chat.ts","webpack:///./src/main/server/databases/chat/entity/ChatHandleJoin.ts","webpack:///./src/main/server/databases/chat/entity/ChatMessageJoin.ts","webpack:///./src/main/server/databases/chat/entity/Handle.ts","webpack:///./src/main/server/databases/chat/entity/Message.ts","webpack:///./src/main/server/databases/chat/entity/index.ts","webpack:///./src/main/server/databases/chat/index.ts","webpack:///./src/main/server/databases/config/entity/Config.ts","webpack:///./src/main/server/databases/config/entity/index.ts","webpack:///./src/main/server/databases/config/index.ts","webpack:///./src/main/server/fileSystem/index.ts","webpack:///./src/main/server/index.ts","webpack:///./src/main/server/services/index.ts","webpack:///./src/main/server/services/socket/index.ts","webpack:///external \"electron\"","webpack:///external \"fs\"","webpack:///external \"path\"","webpack:///external \"reflect-metadata\"","webpack:///external \"socket.io-client\"","webpack:///external \"typeorm\"","webpack:///external \"url\""],"names":["win","BlueBubbles","BackendServer","start","createWindow","BrowserWindow","width","height","minWidth","minHeight","transparent","frame","webPreferences","nodeIntegration","process","env","ELECTRON_DISABLE_SECURITY_WARNINGS","loadURL","webContents","once","openDevTools","on","send","ipcMain","handle","minimize","maximize","unmaximize","app","quit","exit","platform","DEFAULT_GENERAL_ITEMS","ngockServer","guid","Attachment","Entity","PrimaryGeneratedColumn","Column","AttachmentMessageJoin","Chat","Unique","ChatHandleJoin","ChatMessageJoin","Handle","Message","OneToOne","type","JoinColumn","ChatRepository","constructor","db","initialize","isConnected","connect","dbPath","getPath","createConnection","name","database","entities","synchronize","logging","Config","PrimaryColumn","nullable","ConfigRepository","FileSystem","attachmentsDir","setup","setupDirectories","fs","window","chatRepo","configRepo","socketService","config","hasSetup","hasStarted","console","log","startServices","startConfigIpcListeners","initializeDatabases","setupDefaults","ex","message","cfg","getRepository","find","forEach","item","value","setupServices","repo","key","Object","keys","findOne","addConfigItem","SocketService","server_address","passphrase","String","save","startIpcListener","event","args","count","setConfig","emitToUI","update","data","serverAddress","socketServer","io","query"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/main/main.ts\");\n","import \"reflect-metadata\";\r\nimport { app, BrowserWindow, ipcMain } from \"electron\";\r\nimport * as path from \"path\";\r\nimport * as url from \"url\";\r\n\r\nimport { BackendServer } from \"@server/index\";\r\n\r\nlet win: BrowserWindow | null;\r\nconst BlueBubbles = new BackendServer(win);\r\nBlueBubbles.start();\r\n\r\nconst createWindow = async () => {\r\n    win = new BrowserWindow({\r\n        width: 1200,\r\n        height: 750,\r\n        minWidth: 550,\r\n        minHeight: 300,\r\n        transparent: true,\r\n        frame: false,\r\n        webPreferences: { nodeIntegration: true }\r\n    });\r\n\r\n    if (process.env.NODE_ENV !== \"production\") {\r\n        process.env.ELECTRON_DISABLE_SECURITY_WARNINGS = \"1\"; // eslint-disable-line require-atomic-updates\r\n        win.loadURL(`http://localhost:2004`);\r\n    } else {\r\n        win.loadURL(\r\n            url.format({\r\n                pathname: path.join(__dirname, \"index.html\"),\r\n                protocol: \"file:\",\r\n                slashes: true\r\n            })\r\n        );\r\n    }\r\n\r\n    if (process.env.NODE_ENV !== \"production\") {\r\n        // Open DevTools, see https://github.com/electron/electron/issues/12438 for why we wait for dom-ready\r\n        win.webContents.once(\"dom-ready\", () => {\r\n            win!.webContents.openDevTools();\r\n        });\r\n    }\r\n\r\n    win.on(\"closed\", () => {\r\n        win = null;\r\n    });\r\n\r\n    win.on(\"maximize\", () => {\r\n        if (win && win.webContents) win.webContents.send(\"maximized\");\r\n    });\r\n\r\n    win.on(\"unmaximize\", () => {\r\n        if (win && win.webContents) win.webContents.send(\"unmaximized\");\r\n    });\r\n};\r\n\r\nipcMain.handle(\"minimize-event\", () => {\r\n    if (win && win.webContents) win.minimize();\r\n});\r\n\r\nipcMain.handle(\"maximize-event\", () => {\r\n    if (win && win.webContents) win.maximize();\r\n});\r\n\r\nipcMain.handle(\"unmaximize-event\", () => {\r\n    if (win && win.webContents) win.unmaximize();\r\n});\r\n\r\nipcMain.handle(\"close-event\", () => {\r\n    app.quit();\r\n    app.exit(0);\r\n});\r\n\r\napp.on(\"browser-window-focus\", () => {\r\n    if (win && win.webContents) win.webContents.send(\"focused\");\r\n});\r\n\r\napp.on(\"browser-window-blur\", () => {\r\n    if (win && win.webContents) win.webContents.send(\"blurred\");\r\n});\r\n\r\napp.on(\"ready\", createWindow);\r\n\r\napp.on(\"window-all-closed\", () => {\r\n    if (process.platform !== \"darwin\") {\r\n        app.quit();\r\n    }\r\n});\r\n\r\napp.on(\"activate\", () => {\r\n    if (win === null) {\r\n        createWindow();\r\n    }\r\n});\r\n","export const DEFAULT_GENERAL_ITEMS: { [key: string]: Function } = {\r\n    ngockServer: () => \"\",\r\n    guid: () => \"\",\r\n};","import { Entity, PrimaryGeneratedColumn, Column } from \"typeorm\";\r\n\r\n@Entity()\r\nexport class Attachment {\r\n    @PrimaryGeneratedColumn(\"increment\")\r\n    ROWID: number;\r\n\r\n    @Column(\"text\")\r\n    guid: string;\r\n\r\n    @Column(\"text\")\r\n    uti: string;\r\n\r\n    @Column(\"text\")\r\n    mimeType: string;\r\n\r\n    @Column(\"int\")\r\n    transferState: number;\r\n\r\n    @Column(\"int\")\r\n    isOutgoing: number;\r\n\r\n    @Column(\"int\")\r\n    transferName: number;\r\n\r\n    @Column(\"int\")\r\n    totalBytes: number;\r\n\r\n    @Column(\"int\")\r\n    isSticker: number;\r\n\r\n    @Column(\"int\")\r\n    hideAttachment: number;\r\n\r\n    @Column(\"int\")\r\n    blurhash: number;\r\n\r\n    @Column(\"int\")\r\n    height: number;\r\n\r\n    @Column(\"int\")\r\n    width: number;\r\n}\r\n","import { Entity, PrimaryGeneratedColumn, Column } from \"typeorm\";\r\n\r\n@Entity()\r\nexport class AttachmentMessageJoin {\r\n    @PrimaryGeneratedColumn(\"increment\")\r\n    ROWID: number;\r\n\r\n    @Column(\"text\")\r\n    guid: string;\r\n}\r\n","import { Entity, PrimaryGeneratedColumn, Column, Unique } from \"typeorm\";\r\n\r\n@Entity()\r\n@Unique([\"guid\"])\r\nexport class Chat {\r\n    @PrimaryGeneratedColumn(\"increment\")\r\n    ROWID: number;\r\n\r\n    @Column(\"text\")\r\n    guid: string;\r\n\r\n    @Column(\"int\")\r\n    style: number;\r\n\r\n    @Column(\"text\")\r\n    chatIdentifier: string;\r\n\r\n    @Column(\"int\")\r\n    isArchived: number;\r\n\r\n    @Column(\"text\")\r\n    displayName: string;\r\n}\r\n","import { Entity, PrimaryGeneratedColumn, Column } from \"typeorm\";\r\n\r\n@Entity()\r\nexport class ChatHandleJoin {\r\n    @PrimaryGeneratedColumn(\"increment\")\r\n    ROWID: number;\r\n}\r\n","import { Entity, PrimaryGeneratedColumn, Column } from \"typeorm\";\r\n\r\n@Entity()\r\nexport class ChatMessageJoin {\r\n    @PrimaryGeneratedColumn()\r\n    ROWID: number;\r\n\r\n    @Column(\"text\")\r\n    guid: string;\r\n}\r\n","import { Entity, PrimaryGeneratedColumn, Column, Unique } from \"typeorm\";\r\n\r\n@Entity()\r\n@Unique([\"address\"])\r\nexport class Handle {\r\n    @PrimaryGeneratedColumn(\"increment\")\r\n    ROWID: number;\r\n\r\n    @Column(\"text\")\r\n    address: string;\r\n\r\n    @Column(\"text\")\r\n    country: string;\r\n\r\n    @Column(\"text\")\r\n    uncanonicalizedId: string;\r\n}\r\n","import { Entity, PrimaryGeneratedColumn, Column, JoinColumn, OneToOne} from \"typeorm\";\r\nimport { Handle } from \"@server/databases/chat/entity/\";\r\n\r\n@Entity()\r\nexport class Message {\r\n    @PrimaryGeneratedColumn(\"increment\")\r\n    ROWID: number;\r\n\r\n    @Column(\"int\")\r\n    handleId: number;\r\n\r\n    @Column(\"text\")\r\n    guid: string;\r\n\r\n    @Column(\"text\")\r\n    text: string;\r\n\r\n    @Column(\"text\")\r\n    subject: string;\r\n\r\n    @Column(\"text\")\r\n    country: string;\r\n\r\n    @Column(\"int\")\r\n    error: number;\r\n\r\n    @Column(\"int\")\r\n    dateCreated: number;\r\n\r\n    @Column(\"int\")\r\n    dateRead: number;\r\n\r\n    @Column(\"int\")\r\n    dateDelivered: number;\r\n\r\n    @Column(\"int\")\r\n    isFromMe: number;\r\n\r\n    @Column(\"int\")\r\n    isDelayed: number;\r\n\r\n    @Column(\"int\")\r\n    isAutoReply: number;\r\n\r\n    @Column(\"int\")\r\n    isSystemMessage: number;\r\n\r\n    @Column(\"int\")\r\n    isServiceMessage: number;\r\n\r\n    @Column(\"int\")\r\n    isForward: number;\r\n\r\n    @Column(\"int\")\r\n    isArchived: number;\r\n\r\n    @Column(\"text\")\r\n    cacheRoomnames: string;\r\n\r\n    @Column(\"int\")\r\n    isAudioMessage: number;\r\n\r\n    @Column(\"int\")\r\n    datePlayed: number;\r\n\r\n    @Column(\"int\")\r\n    itemType: number;\r\n\r\n    @Column(\"text\")\r\n    groupTitle: string;\r\n\r\n    @Column(\"int\")\r\n    groupActionType: number;\r\n\r\n    @Column(\"int\")\r\n    isExpired: number;\r\n\r\n    @Column(\"text\")\r\n    associatedMessageGuid: string;\r\n\r\n    @Column(\"text\")\r\n    associatedMessageType: string;\r\n\r\n    @Column(\"text\")\r\n    expressiveSendStyleId: string;\r\n\r\n    @Column(\"int\")\r\n    timeExpressiveSendStyleId: number;\r\n\r\n    @Column(\"int\")\r\n    hasAttachments: number;\r\n\r\n    @OneToOne(type => Handle)\r\n    @JoinColumn()\r\n    handle: Handle;\r\n}\r\n","import { Attachment } from \"./Attachment\";\r\nimport { AttachmentMessageJoin } from \"./AttachmentMessageJoin\";\r\nimport { Chat } from \"./Chat\";\r\nimport { Handle } from \"./Handle\";\r\nimport { ChatHandleJoin } from \"./ChatHandleJoin\";\r\nimport { Message } from \"./Message\";\r\nimport { ChatMessageJoin } from \"./ChatMessageJoin\";\r\n\r\nexport { Attachment, AttachmentMessageJoin, Chat, Handle, ChatHandleJoin, Message, ChatMessageJoin };\r\n","import { app } from \"electron\";\r\nimport { createConnection, Connection } from \"typeorm\";\r\n\r\nimport { Attachment, AttachmentMessageJoin, Chat, Handle, ChatHandleJoin, Message, ChatMessageJoin } from \"./entity\";\r\n\r\nexport class ChatRepository {\r\n    db: Connection = null;\r\n\r\n    constructor() {\r\n        this.db = null;\r\n    }\r\n\r\n    async initialize() {\r\n        if (this.db) {\r\n            if (!this.db.isConnected) await this.db.connect();\r\n            return this.db;\r\n        }\r\n\r\n        let dbPath = `${app.getPath(\"userData\")}/chat.db`;\r\n        if (process.env.NODE_ENV !== \"production\") {\r\n            dbPath = `${app.getPath(\"userData\")}/BlueBubbles-Desktop-App/chat.db`;\r\n        }\r\n\r\n        this.db = await createConnection({\r\n            name: \"chat\",\r\n            type: \"sqlite\",\r\n            database: dbPath,\r\n            entities: [Attachment, AttachmentMessageJoin, Chat, Handle, ChatHandleJoin, Message, ChatMessageJoin],\r\n            synchronize: true,\r\n            logging: false\r\n        });\r\n\r\n        return this.db;\r\n    }\r\n\r\n    // async getChatPrevs() {\r\n    //     // Get convo participants, most recent message, and message timestamp from all conversations\r\n    // }\r\n}\r\n","import { Entity, Column, PrimaryColumn } from \"typeorm\";\r\n\r\n@Entity()\r\nexport class Config {\r\n    @PrimaryColumn(\"text\", { name: \"name\" })\r\n    name: string;\r\n\r\n    @Column(\"text\", { name: \"value\", nullable: true })\r\n    value: string;\r\n}\r\n","import { Config } from \"./Config\";\r\n\r\nexport { Config };\r\n","import { app } from \"electron\";\r\nimport { createConnection, Connection } from \"typeorm\";\r\n\r\nimport { Config } from \"./entity\";\r\n\r\nexport class ConfigRepository {\r\n    db: Connection = null;\r\n\r\n    constructor() {\r\n        this.db = null;\r\n    }\r\n\r\n    async initialize() {\r\n        if (this.db) {\r\n            if (!this.db.isConnected) await this.db.connect();\r\n            return this.db;\r\n        }\r\n\r\n        let dbPath = `${app.getPath(\"userData\")}/config.db`;\r\n        if (process.env.NODE_ENV !== \"production\") {\r\n            dbPath = `${app.getPath(\"userData\")}/BlueBubbles-Desktop-App/config.db`;\r\n        }\r\n\r\n        this.db = await createConnection({\r\n            name: \"config\",\r\n            type: \"sqlite\",\r\n            database: dbPath,\r\n            entities: [Config],\r\n            synchronize: true,\r\n            logging: false\r\n        });\r\n\r\n        return this.db;\r\n    }\r\n\r\n    // async getChatPrevs() {\r\n    //     // Get convo participants, most recent message, and message timestamp from all conversations\r\n    // }\r\n}\r\n","import * as fs from \"fs\";\r\nimport * as path from \"path\";\r\nimport { app } from \"electron\";\r\n\r\nexport class FileSystem {\r\n    public attachmentsDir = `Attachments`;\r\n\r\n    async setup(): Promise<void> {\r\n        this.setupDirectories();\r\n    }\r\n\r\n    // Creates required directories\r\n    setupDirectories(): void {\r\n        if (!fs.existsSync(this.attachmentsDir)) fs.mkdirSync(this.attachmentsDir);\r\n    }\r\n}\r\n","import { ipcMain, BrowserWindow } from \"electron\";\r\nimport { Connection } from \"typeorm\";\r\n\r\n// Config and FileSystem Imports\r\nimport { Config } from \"@server/databases/config/entity/Config\";\r\nimport { FileSystem } from \"@server/fileSystem\";\r\nimport { DEFAULT_GENERAL_ITEMS } from \"@server/constants\";\r\n\r\n// Database Imports\r\nimport { ConfigRepository } from \"@server/databases/config\";\r\nimport { ChatRepository } from \"@server/databases/chat\";\r\n\r\n// Service Imports\r\nimport { SocketService } from \"@server/services\";\r\n\r\nimport { Handle } from \"./databases/chat/entity/Handle\";\r\n\r\nexport class BackendServer {\r\n    window: BrowserWindow;\r\n\r\n    db: Connection;\r\n\r\n    chatRepo: ChatRepository;\r\n\r\n    configRepo: ConfigRepository;\r\n\r\n    socketService: SocketService;\r\n\r\n    config: { [key: string]: any };\r\n\r\n    fs: FileSystem;\r\n\r\n    hasSetup: boolean;\r\n\r\n    hasStarted: boolean;\r\n\r\n    constructor(window: BrowserWindow) {\r\n        this.window = window;\r\n\r\n        // Databases\r\n        this.chatRepo = null;\r\n        this.configRepo = null;\r\n\r\n        // Other helpers\r\n        this.config = {};\r\n        this.fs = null;\r\n\r\n        // Services\r\n        this.socketService = null;\r\n\r\n        this.hasSetup = false;\r\n        this.hasStarted = false;\r\n    }\r\n\r\n    /**\r\n     * Starts the back-end \"server\"\r\n     */\r\n    async start(): Promise<void> {\r\n        console.log(\"Starting BlueBubbles Backend...\");\r\n        await this.setup();\r\n        await this.startServices();\r\n\r\n        console.log(\"Starting Configuration IPC Listeners...\");\r\n        this.startConfigIpcListeners();\r\n    }\r\n\r\n    /**\r\n     * Sets up the server by initializing a \"filesystem\" and other\r\n     * tasks such as setting up the databases and internal services\r\n     */\r\n    private async setup(): Promise<void> {\r\n        console.log(\"Performing Setup...\");\r\n        await this.initializeDatabases();\r\n        await this.setupDefaults();\r\n\r\n        try {\r\n            console.log(\"Initializing filesystem...\");\r\n            this.fs = new FileSystem();\r\n            this.fs.setup();\r\n        } catch (ex) {\r\n            console.log(`!Failed to setup filesystem! ${ex.message}`);\r\n        }\r\n\r\n        console.log(\"Initializing configuration database...\");\r\n        const cfg = await this.configRepo.db.getRepository(Config).find();\r\n        cfg.forEach(item => {\r\n            this.config[item.name] = item.value;\r\n        });\r\n\r\n        try {\r\n            console.log(\"Launching Services..\");\r\n            await this.setupServices();\r\n        } catch (ex) {\r\n            console.log(\"Failed to launch server services.\", \"error\");\r\n        }\r\n    }\r\n\r\n    private async initializeDatabases() {\r\n        try {\r\n            console.log(\"Connecting to messaging database...\");\r\n            this.chatRepo = new ChatRepository();\r\n            await this.chatRepo.initialize();\r\n        } catch (ex) {\r\n            console.log(`Failed to connect to messaging database! ${ex.message}`);\r\n        }\r\n\r\n        try {\r\n            console.log(\"Connecting to settings database...\");\r\n            this.configRepo = new ConfigRepository();\r\n            await this.configRepo.initialize();\r\n        } catch (ex) {\r\n            console.log(`Failed to connect to settings database! ${ex.message}`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets up default database values for configuration items\r\n     */\r\n    private async setupDefaults(): Promise<void> {\r\n        try {\r\n            const repo = this.configRepo.db.getRepository(Config);\r\n            for (const key of Object.keys(DEFAULT_GENERAL_ITEMS)) {\r\n                const item = await repo.findOne({ name: key });\r\n                if (!item) await this.addConfigItem(key, DEFAULT_GENERAL_ITEMS[key]());\r\n            }\r\n        } catch (ex) {\r\n            console.log(`Failed to setup default configurations! ${ex.message}`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets up any internal services that need to be instantiated and configured\r\n     */\r\n    private async setupServices() {\r\n        if (this.hasSetup) return;\r\n\r\n        try {\r\n            console.log(\"Initializing up sockets...\");\r\n            this.socketService = new SocketService(\r\n                this.db,\r\n                this.chatRepo,\r\n                this.configRepo,\r\n                this.fs,\r\n                this.config.server_address,\r\n                this.config.passphrase\r\n            );\r\n        } catch (ex) {\r\n            console.log(`Failed to setup socket service! ${ex.message}`);\r\n        }\r\n\r\n        this.hasSetup = true;\r\n    }\r\n\r\n    private async startServices() {\r\n        if (this.hasStarted === false) {\r\n            console.log(\"Starting socket service...\");\r\n            this.socketService.start();\r\n\r\n            // this.log(\"Starting chat listener...\");\r\n            // this.startChatListener();\r\n            // this.startIpcListener();\r\n        }\r\n\r\n        this.hasStarted = true;\r\n    }\r\n\r\n    private async addConfigItem(name: string, value: string | number): Promise<Config> {\r\n        const item = new Config();\r\n        item.name = name;\r\n        item.value = String(value);\r\n        await this.configRepo.db.getRepository(Config).save(item);\r\n        return item;\r\n    }\r\n\r\n    private startIpcListener() {\r\n        ipcMain.handle(\"getChatPrevs\", async (event, args) => {\r\n            if (!this.chatRepo.db) return 0;\r\n            // TODO: Fill this out\r\n            const count = 0; // await this.chatRepo.getChatPrevs();\r\n            return count;\r\n        });\r\n    }\r\n\r\n    private startConfigIpcListeners() {\r\n        ipcMain.handle(\"set-config\", async (event, args) => {\r\n            for (const item of Object.keys(args)) {\r\n                if (this.config[item] && this.config[item] !== args[item]) {\r\n                    this.config[item] = args[item];\r\n                }\r\n                // Update in class\r\n                if (this.config[item]) {\r\n                    await this.setConfig(item, args[item]);\r\n                }\r\n            }\r\n\r\n            this.emitToUI(\"config-update\", this.config);\r\n            return this.config;\r\n        });\r\n    }\r\n\r\n    private async setConfig(name: string, value: string): Promise<void> {\r\n        this.db = await this.configRepo.initialize();\r\n        await this.configRepo.db.getRepository(Config).update({ name }, { value });\r\n        this.config[name] = value;\r\n        this.emitToUI(\"config-update\", this.config);\r\n    }\r\n\r\n    private emitToUI(event: string, data: any) {\r\n        if (this.window) this.window.webContents.send(event, data);\r\n    }\r\n}\r\n","import { SocketService } from \"./socket\";\r\n\r\nexport { SocketService};","import * as io from \"socket.io-client\";\r\n\r\n// Internal Libraries\r\nimport { FileSystem } from \"@server/fileSystem\";\r\n\r\n// Database Dependency Imports\r\nimport { ConfigRepository } from \"@server/databases/config\";\r\nimport { ChatRepository } from \"@server/databases/chat\";\r\nimport { Connection } from \"typeorm\";\r\n\r\nexport class SocketService {\r\n    db: Connection;\r\n\r\n    socketServer: any;\r\n\r\n    chatRepo: ChatRepository;\r\n\r\n    configRepo: ConfigRepository;\r\n\r\n    fs: FileSystem;\r\n\r\n    serverAddress: string;\r\n\r\n    /**\r\n     * Starts up the initial Socket.IO connection and initializes other\r\n     * required classes and variables\r\n     *\r\n     * @param chatRepo The iMessage database repository\r\n     * @param configRepo The app's settings repository\r\n     * @param fs The filesystem class handler\r\n     * @param serverAddress The server we are connecting to\r\n     * @param passphrase The passphrase to connect to the server\r\n     */\r\n    constructor(\r\n        db: Connection,\r\n        chatRepo: ChatRepository,\r\n        configRepo: ConfigRepository,\r\n        fs: FileSystem,\r\n        serverAddress: string,\r\n        passphrase: string\r\n    ) {\r\n        this.db = db;\r\n        \r\n        this.socketServer = io(serverAddress, {\r\n            query: {\r\n                guid: passphrase\r\n            }\r\n        });\r\n\r\n        this.chatRepo = chatRepo;\r\n        this.configRepo = configRepo;\r\n        this.fs = fs;\r\n        this.serverAddress = serverAddress;\r\n    }\r\n\r\n    /**\r\n     * Sets up the socket listeners\r\n     */\r\n    async start() {\r\n        //Connect to server\r\n        \r\n    }\r\n}\r\n\r\n// import {createConnection, getManager} from \"typeorm\";\r\n// import {Handle} from \"../entities/messaging/Handle\";\r\n// import {chatPrevGetAllAction} from \"../actions/ChatPrevGetAllAction\";\r\n\r\n// //Connect to server with socket\r\n// export async function ConnectToServer(url, aGuid){\r\n\r\n// }\r\n\r\n// createConnection({\r\n//     type: \"sqlite\",\r\n//     database: \"src/main/server/db/messaging.db\",\r\n//     entities: [\r\n//         Handle\r\n//     ],\r\n//     synchronize: true,\r\n//     logging: false\r\n// }).then(async connection => {\r\n//     const io = require('socket.io-client')\r\n//     const socket = io(\"\",{\r\n//     query: {\r\n//         guid: \"\"\r\n//     }\r\n//     })\r\n\r\n//     // On Socket Connect\r\n//     socket.on('connect', () => {\r\n//     console.log(socket.connected)\r\n//     const firstAppStartUp = true;\r\n\r\n//     if (firstAppStartUp){\r\n//         //Get all chats from server and save locally\r\n//         // initFromServer();\r\n//         GetAllChatsFromServer();\r\n//         console.log(\"here\");\r\n//     } else{\r\n\r\n//     }\r\n//     });\r\n\r\n//     // let handle = new Handle();\r\n//     // handle.address = \"\";\r\n\r\n//     //Get All Chats\r\n//     function GetAllChatsFromServer() {\r\n//         socket.emit('get-chats',true,(data) => {\r\n//         console.log(data.data[0].participants[0].address);\r\n//         await GetHandle();\r\n//         chatPrevGetAllAction();\r\n\r\n//         //Get Handle\r\n//         asyncfunction GetHandle() {\r\n//             let handleRepository = connection.getRepository(Handle);\r\n//             let i;\r\n//             for(i=0; i < Object.keys(data.data).length; i++){\r\n//                 let handle = new Handle();\r\n//                 if(data.data[i].participants[0].address != null) {\r\n//                     handle.address = data.data[i].participants[0].address;\r\n//                 };\r\n//                 if(data.data[i].participants[0].country != null) {\r\n//                     handle.country = data.data[i].participants[0].country;\r\n//                 };\r\n//                 if(data.data[i].participants[0].uncanonicalizedId != null) {\r\n//                     handle.uncanonicalizedId = data.data[i].participants[0].uncanonicalizedId;\r\n//                 } else{\r\n//                     handle.uncanonicalizedId = \"X:XX PM\";\r\n//                 };\r\n//                 // console.log(handle.address);\r\n//                 try {\r\n//                     // return connection.manager\r\n//                     //             .save(handle)\r\n//                     //             .then(handle => {\r\n//                     //                 console.log(\"handle has been saved. handle address is\", handle.address);\r\n//                     //             });\r\n//                     handleRepository.save(handle);\r\n//                     console.log(\"Handle saved\");\r\n//                 } catch (err){\r\n//                     console.log(err);\r\n//                 }\r\n\r\n//             }\r\n//         }\r\n\r\n//             return data\r\n//         })\r\n//     }\r\n\r\n// }).catch(error => console.log(\"TypeORM connection error: \", error));\r\n\r\n// // const initFromServer = {\r\n\r\n// // }\r\n\r\n// //Get A Single Chat by guid\r\n// function GetSingleChat(guid){\r\n//     socket.emit(\"get-chat\",{chatGuid: guid}, (data) =>{\r\n//         console.log(data.data)\r\n//         return data.data\r\n//     })\r\n// }\r\n\r\n// //Get All Messages In A Chat\r\n// function GetChatMessages(guid){\r\n//     socket.emit(\"get-chat-messages\",{identifier: guid}, (data) =>{\r\n//         console.log(data.data)\r\n//         return data.data\r\n//     })\r\n// }\r\n\r\n// //Get Most Recent Message For A Given guid\r\n// function GetMostRecentMessage(guid){\r\n//     socket.emit(\"get-last-chat-message\",{identifier: guid}, (data) =>{\r\n//         console.log(data)\r\n//         return data\r\n//     })\r\n// }\r\n\r\n// //Get Attachment By guid\r\n// function GetAttachmentByGUID(guid){\r\n//     socket.emit(\"get-attatchment\",{identifier: guid}, (data) =>{\r\n//         console.log(data)\r\n//         return data\r\n//     })\r\n// }\r\n\r\n// //Get Attachment Chunk By guid\r\n// function GetAttachmentChunkByGUID(guid){\r\n//     socket.emit(\"get-attatchment-chunk\",{identifier: guid}, (data) =>{\r\n//         console.log(data)\r\n//         return data\r\n//     })\r\n// }\r\n\r\n// //Get Participants In A Chat\r\n// function GetChatParticipants(guid){\r\n//     socket.emit(\"get-participants\",{identifier: guid}, (data) =>{\r\n//         console.log(data)\r\n//         return data\r\n//     })\r\n// }\r\n\r\n// //Send A Message\r\n// function SendMessage(chatGuid, myMessage) {\r\n//     socket.emit(\"send-message\",{guid: chatGuid, message: myMessage}, (data) =>{\r\n//         console.log(data)\r\n//         return data\r\n//     })\r\n// }\r\n\r\n// //Send A Message With Chunked Attachments\r\n// function SendMessageWithAttachment(guid, myMessage,myAttachmentData){\r\n//     socket.emit(\"send-message-chunk\",{guid: guid, message: myMessage, attachmentData: myAttachmentData}, (data) =>{\r\n//         console.log(data)\r\n//         return data\r\n//     })\r\n// }\r\n\r\n// //Start A Chat\r\n// function NewChat(guid, chatParticipants){\r\n//     socket.emit(\"start-chat\",{identifier: guid, participants: chatParticipants}, (data) =>{\r\n//         console.log(data)\r\n//         return data\r\n//     })\r\n// }\r\n\r\n// //Rename A Group Chat\r\n// function RenameGroupChat(guid, newGroupName) {\r\n//     socket.emit(\"rename-group\",{identifier: guid, newName: newGroupName}, (data) =>{\r\n//         console.log(data)\r\n//         return data\r\n//     })\r\n// }\r\n\r\n// //Add A Participant To Chat\r\n// function AddParticipantToChat(guid, participantAddress){\r\n//     socket.emit(\"add-participant\",{identifier: guid, address: participantAddress}, (data) =>{\r\n//         console.log(data)\r\n//         return data\r\n//     })\r\n// }\r\n\r\n// //Remove A Participant To Chat\r\n// function RemoveParticipantToChat(guid, participantAddress){\r\n//     socket.emit(\"remove-participant\",{identifier: guid, address: participantAddress}, (data) =>{\r\n//         console.log(data)\r\n//         return data\r\n//     })\r\n// }\r\n\r\n// //Send Reaction (NOT IMPLEMENTED IN SERVER)\r\n// function SendReaction(guid) {\r\n//     socket.emit(\"send-reaction\",{identifier: guid}, (data) =>{\r\n//         console.log(data)\r\n//     })\r\n// }\r\n","module.exports = require(\"electron\");","module.exports = require(\"fs\");","module.exports = require(\"path\");","module.exports = require(\"reflect-metadata\");","module.exports = require(\"socket.io-client\");","module.exports = require(\"typeorm\");","module.exports = require(\"url\");"],"sourceRoot":""}