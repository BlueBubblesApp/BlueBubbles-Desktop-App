{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/main/main.ts","webpack:///./src/main/server/constants.ts","webpack:///./src/main/server/databases/chat/entity/Attachment.ts","webpack:///./src/main/server/databases/chat/entity/AttachmentMessageJoin.ts","webpack:///./src/main/server/databases/chat/entity/Chat.ts","webpack:///./src/main/server/databases/chat/entity/ChatHandleJoin.ts","webpack:///./src/main/server/databases/chat/entity/ChatMessageJoin.ts","webpack:///./src/main/server/databases/chat/entity/Handle.ts","webpack:///./src/main/server/databases/chat/entity/Message.ts","webpack:///./src/main/server/databases/chat/entity/index.ts","webpack:///./src/main/server/databases/chat/index.ts","webpack:///./src/main/server/databases/config/entity/Config.ts","webpack:///./src/main/server/databases/config/entity/index.ts","webpack:///./src/main/server/databases/config/index.ts","webpack:///./src/main/server/databases/transformers/BooleanTransformer.ts","webpack:///./src/main/server/databases/transformers/index.ts","webpack:///./src/main/server/fileSystem/index.ts","webpack:///./src/main/server/index.ts","webpack:///./src/main/server/services/index.ts","webpack:///./src/main/server/services/socket/index.ts","webpack:///external \"electron\"","webpack:///external \"fs\"","webpack:///external \"path\"","webpack:///external \"reflect-metadata\"","webpack:///external \"socket.io-client\"","webpack:///external \"typeorm\"","webpack:///external \"url\""],"names":["win","BlueBubbles","BackendServer","start","createWindow","BrowserWindow","width","height","minWidth","minHeight","transparent","frame","webPreferences","nodeIntegration","process","env","ELECTRON_DISABLE_SECURITY_WARNINGS","loadURL","webContents","once","openDevTools","on","send","window","ipcMain","handle","minimize","maximize","unmaximize","app","quit","exit","platform","DEFAULT_GENERAL_ITEMS","ngockServer","guid","lastFetch","Attachment","Entity","PrimaryGeneratedColumn","Column","AttachmentMessageJoin","Chat","Unique","type","nullable","ChatHandleJoin","ChatMessageJoin","Handle","Message","default","transformer","BooleanTransformer","OneToOne","JoinColumn","ChatRepository","constructor","db","initialize","isConnected","connect","dbPath","getPath","createConnection","name","database","entities","synchronize","logging","createChatFromResponse","res","chat","chatIdentifier","displayName","isArchived","style","createHandleFromResponse","address","country","uncanonicalizedId","createMessageFromResponse","message","handleId","text","subject","error","dateCreated","dateRead","associatedMessageGuid","dateDelivered","isFromMe","isDelayed","isAutoReply","isSystemMessage","isServiceMessage","isForward","cacheRoomnames","isAudioMessage","datePlayed","itemType","groupTitle","groupActionType","isExpired","associatedMessageType","expressiveSendStyleId","timeExpressiveSendStyleId","hasAttachments","Object","keys","includes","attachments","length","saveChat","repo","getRepository","existing","ROWID","findOne","update","save","saveHandle","savedChat","joinRepo","saved","console","log","chj","chatId","saveMessage","cmj","messageId","Config","PrimaryColumn","ConfigRepository","config","loadConfig","items","find","i","convertFromDbValue","value","hasConfigItem","getConfigItem","setConfigItem","saniVal","convertToDbValue","item","create","input","Boolean","Number","test","Date","String","getTime","from","dbValue","to","entityValue","FileSystem","attachmentsDir","setup","setupDirectories","fs","chatRepo","configRepo","socketService","setupComplete","servicesStarted","setupServices","ex","startIpcListeners","fetchChats","initializeDatabases","setupDefaults","key","override","SocketService","socketServer","connected","warn","emitData","loading","syncProgress","loginIsValid","loadingMessage","redirect","now","chats","getChats","emitToUI","count","chatObj","participant","participants","payload","withChats","after","limit","messages","getChatMessages","msg","Math","floor","later","event","args","hasConfig","_","errData","enteredServerAddress","enteredPassword","data","serverAddress","passphrase","Promise","resolve","reject","io","query","Error","withParticipants","emit","status","identifier","offset","before","sort"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/main/main.ts\");\n","import \"reflect-metadata\";\nimport { app, BrowserWindow, ipcMain } from \"electron\";\nimport * as path from \"path\";\nimport * as url from \"url\";\n\nimport { BackendServer } from \"@server/index\";\n\nlet win: BrowserWindow | null;\nconst BlueBubbles = new BackendServer(win);\nBlueBubbles.start();\n\nconst createWindow = async () => {\n    win = new BrowserWindow({\n        width: 1200,\n        height: 750,\n        minWidth: 550,\n        minHeight: 350,\n        transparent: true,\n        frame: false,\n        webPreferences: { nodeIntegration: true }\n    });\n\n    if (process.env.NODE_ENV !== \"production\") {\n        process.env.ELECTRON_DISABLE_SECURITY_WARNINGS = \"1\"; // eslint-disable-line require-atomic-updates\n        win.loadURL(`http://localhost:2004`);\n    } else {\n        win.loadURL(\n            url.format({\n                pathname: path.join(__dirname, \"index.html\"),\n                protocol: \"file:\",\n                slashes: true\n            })\n        );\n    }\n\n    if (process.env.NODE_ENV !== \"production\") {\n        // Open DevTools, see https://github.com/electron/electron/issues/12438 for why we wait for dom-ready\n        win.webContents.once(\"dom-ready\", () => {\n            win!.webContents.openDevTools();\n        });\n    }\n\n    win.on(\"closed\", () => {\n        win = null;\n    });\n\n    win.on(\"maximize\", () => {\n        if (win && win.webContents) win.webContents.send(\"maximized\");\n    });\n\n    win.on(\"unmaximize\", () => {\n        if (win && win.webContents) win.webContents.send(\"unmaximized\");\n    });\n\n    BlueBubbles.window = win;\n};\n\nipcMain.handle(\"minimize-event\", () => {\n    if (win && win.webContents) win.minimize();\n});\n\nipcMain.handle(\"maximize-event\", () => {\n    if (win && win.webContents) win.maximize();\n});\n\nipcMain.handle(\"unmaximize-event\", () => {\n    if (win && win.webContents) win.unmaximize();\n});\n\nipcMain.handle(\"close-event\", () => {\n    app.quit();\n    app.exit(0);\n});\n\napp.on(\"browser-window-focus\", () => {\n    if (win && win.webContents) win.webContents.send(\"focused\");\n});\n\napp.on(\"browser-window-blur\", () => {\n    if (win && win.webContents) win.webContents.send(\"blurred\");\n});\n\napp.on(\"ready\", createWindow);\n\napp.on(\"window-all-closed\", () => {\n    if (process.platform !== \"darwin\") {\n        app.quit();\n    }\n});\n\napp.on(\"activate\", () => {\n    if (win === null) {\n        createWindow();\n    }\n});\n","export const DEFAULT_GENERAL_ITEMS: { [key: string]: Function } = {\n    ngockServer: () => \"\",\n    guid: () => \"\",\n    lastFetch: () => 0\n};\n","import { Entity, PrimaryGeneratedColumn, Column } from \"typeorm\";\n\n@Entity()\nexport class Attachment {\n    @PrimaryGeneratedColumn()\n    ROWID: number;\n\n    @Column(\"text\")\n    guid: string;\n\n    @Column(\"text\")\n    uti: string;\n\n    @Column(\"text\")\n    mimeType: string;\n\n    @Column(\"integer\")\n    transferState: number;\n\n    @Column(\"integer\")\n    isOutgoing: number;\n\n    @Column(\"integer\")\n    transferName: number;\n\n    @Column(\"integer\")\n    totalBytes: number;\n\n    @Column(\"integer\")\n    isSticker: number;\n\n    @Column(\"integer\")\n    hideAttachment: number;\n\n    @Column(\"integer\")\n    blurhash: number;\n\n    @Column(\"integer\")\n    height: number;\n\n    @Column(\"integer\")\n    width: number;\n}\n","import { Entity, PrimaryGeneratedColumn, Column } from \"typeorm\";\n\n@Entity()\nexport class AttachmentMessageJoin {\n    @PrimaryGeneratedColumn()\n    ROWID: number;\n\n    @Column(\"integer\")\n    attachmentId: number;\n\n    @Column(\"integer\")\n    messageId: number;\n}\n","import { Entity, PrimaryGeneratedColumn, Column, Unique } from \"typeorm\";\n\n@Entity()\n@Unique([\"guid\"])\nexport class Chat {\n    @PrimaryGeneratedColumn()\n    ROWID: number;\n\n    @Column(\"text\")\n    guid: string;\n\n    @Column(\"integer\")\n    style: number;\n\n    @Column(\"text\")\n    chatIdentifier: string;\n\n    @Column(\"integer\")\n    isArchived: number;\n\n    @Column({ type: \"text\", nullable: true })\n    displayName: string;\n}\n","import { Entity, PrimaryGeneratedColumn, Column } from \"typeorm\";\n\n@Entity()\nexport class ChatHandleJoin {\n    @PrimaryGeneratedColumn()\n    ROWID: number;\n\n    @Column(\"integer\")\n    chatId: number;\n\n    @Column(\"integer\")\n    handleId: number;\n}\n","import { Entity, PrimaryGeneratedColumn, Column } from \"typeorm\";\n\n@Entity()\nexport class ChatMessageJoin {\n    @PrimaryGeneratedColumn()\n    ROWID: number;\n\n    @Column(\"integer\")\n    chatId: number;\n\n    @Column(\"integer\")\n    messageId: number;\n}\n","import { Entity, PrimaryGeneratedColumn, Column, Unique } from \"typeorm\";\n\n@Entity()\n@Unique([\"address\"])\nexport class Handle {\n    @PrimaryGeneratedColumn()\n    ROWID: number;\n\n    @Column(\"text\")\n    address: string;\n\n    @Column({ type: \"text\", nullable: true })\n    country: string;\n\n    @Column({ type: \"text\", nullable: true })\n    uncanonicalizedId: string;\n}\n","import { Entity, PrimaryGeneratedColumn, Column, JoinColumn, OneToOne } from \"typeorm\";\nimport { Handle } from \"@server/databases/chat/entity/\";\nimport { BooleanTransformer } from \"@server/databases/transformers\";\n\n@Entity()\nexport class Message {\n    @PrimaryGeneratedColumn()\n    ROWID: number;\n\n    @Column(\"integer\")\n    handleId: number;\n\n    @Column(\"text\")\n    guid: string;\n\n    @Column(\"text\")\n    text: string;\n\n    @Column({ type: \"text\", nullable: true })\n    subject: string;\n\n    @Column({ type: \"text\", nullable: true })\n    country: string;\n\n    @Column(\"integer\")\n    error: number;\n\n    @Column({ type: \"integer\", nullable: false })\n    dateCreated: number;\n\n    @Column({ type: \"integer\", nullable: false, default: 0 })\n    dateRead: number;\n\n    @Column({ type: \"integer\", nullable: false, default: 0 })\n    dateDelivered: number;\n\n    @Column({ type: \"integer\", transformer: BooleanTransformer })\n    isFromMe: boolean;\n\n    @Column({ type: \"integer\", transformer: BooleanTransformer })\n    isDelayed: boolean;\n\n    @Column({ type: \"integer\", transformer: BooleanTransformer })\n    isAutoReply: boolean;\n\n    @Column({ type: \"integer\", transformer: BooleanTransformer })\n    isSystemMessage: boolean;\n\n    @Column({ type: \"integer\", transformer: BooleanTransformer })\n    isServiceMessage: boolean;\n\n    @Column({ type: \"integer\", transformer: BooleanTransformer })\n    isForward: boolean;\n\n    @Column({ type: \"integer\", transformer: BooleanTransformer })\n    isArchived: boolean;\n\n    @Column({ type: \"text\", nullable: true })\n    cacheRoomnames: string;\n\n    @Column({ type: \"integer\", transformer: BooleanTransformer, default: false })\n    isAudioMessage: boolean;\n\n    @Column(\"integer\")\n    datePlayed: number;\n\n    @Column(\"integer\")\n    itemType: number;\n\n    @Column({ type: \"text\", nullable: true })\n    groupTitle: string;\n\n    @Column(\"integer\")\n    groupActionType: number;\n\n    @Column({ type: \"integer\", transformer: BooleanTransformer, default: false })\n    isExpired: boolean;\n\n    @Column({ type: \"text\", nullable: true })\n    associatedMessageGuid: string;\n\n    @Column({ type: \"text\", nullable: false, default: 0 })\n    associatedMessageType: number;\n\n    @Column({ type: \"text\", nullable: true })\n    expressiveSendStyleId: string;\n\n    @Column({ type: \"integer\", nullable: false, default: 0 })\n    timeExpressiveSendStyleId: number;\n\n    @Column({ type: \"integer\", transformer: BooleanTransformer, default: false })\n    hasAttachments: boolean;\n\n    @OneToOne(type => Handle)\n    @JoinColumn()\n    handle: Handle;\n}\n","import { Attachment } from \"./Attachment\";\nimport { AttachmentMessageJoin } from \"./AttachmentMessageJoin\";\nimport { Chat } from \"./Chat\";\nimport { Handle } from \"./Handle\";\nimport { ChatHandleJoin } from \"./ChatHandleJoin\";\nimport { Message } from \"./Message\";\nimport { ChatMessageJoin } from \"./ChatMessageJoin\";\n\nexport { Attachment, AttachmentMessageJoin, Chat, Handle, ChatHandleJoin, Message, ChatMessageJoin };\n","import { app } from \"electron\";\nimport { createConnection, Connection } from \"typeorm\";\nimport { ChatResponse, HandleResponse, MessageResponse } from \"@server/types\";\n\nimport { Attachment, AttachmentMessageJoin, Chat, Handle, ChatHandleJoin, Message, ChatMessageJoin } from \"./entity\";\n\nexport class ChatRepository {\n    db: Connection = null;\n\n    constructor() {\n        this.db = null;\n    }\n\n    async initialize(): Promise<Connection> {\n        if (this.db) {\n            if (!this.db.isConnected) await this.db.connect();\n            return this.db;\n        }\n\n        let dbPath = `${app.getPath(\"userData\")}/chat.db`;\n        if (process.env.NODE_ENV !== \"production\") {\n            dbPath = `${app.getPath(\"userData\")}/BlueBubbles-Desktop-App/chat.db`;\n        }\n\n        this.db = await createConnection({\n            name: \"chat\",\n            type: \"sqlite\",\n            database: dbPath,\n            entities: [Attachment, AttachmentMessageJoin, Chat, Handle, ChatHandleJoin, Message, ChatMessageJoin],\n            synchronize: true,\n            logging: false\n        });\n\n        return this.db;\n    }\n\n    static createChatFromResponse(res: ChatResponse): Chat {\n        const chat = new Chat();\n        chat.guid = res.guid;\n        chat.chatIdentifier = res.chatIdentifier;\n        chat.displayName = res.displayName;\n        chat.isArchived = res.isArchived ? 1 : 0;\n        chat.style = res.style;\n        return chat;\n    }\n\n    static createHandleFromResponse(res: HandleResponse): Handle {\n        const handle = new Handle();\n        handle.address = res.address;\n        handle.country = res.country;\n        handle.uncanonicalizedId = res.uncanonicalizedId;\n        return handle;\n    }\n\n    static createMessageFromResponse(res: MessageResponse): Message {\n        const message = new Message();\n        message.handleId = res.handleId;\n        message.guid = res.guid;\n        message.text = res.text;\n        message.subject = res.subject;\n        message.country = res.country;\n        message.error = res.error;\n        message.dateCreated = res.dateCreated ?? 0;\n        message.dateRead = res.dateRead ?? 0;\n        message.associatedMessageGuid = res.associatedMessageGuid;\n        message.dateDelivered = res.dateDelivered ?? 0;\n        message.isFromMe = res.isFromMe;\n        message.isDelayed = res.isDelayed;\n        message.isAutoReply = res.isAutoReply;\n        message.isSystemMessage = res.isSystemMessage;\n        message.isServiceMessage = res.isServiceMessage;\n        message.isForward = res.isForward;\n        message.isArchived = res.isArchived;\n        message.cacheRoomnames = res.cacheRoomnames;\n        message.isAudioMessage = res.isAudioMessage;\n        message.datePlayed = res.datePlayed ?? 0;\n        message.itemType = res.itemType;\n        message.groupTitle = res.groupTitle;\n        message.groupActionType = res.groupActionType;\n        message.isExpired = res.isExpired;\n        message.associatedMessageGuid = res.associatedMessageGuid;\n        message.associatedMessageType = res.associatedMessageType ?? 0;\n        message.expressiveSendStyleId = res.expressiveSendStyleId;\n        message.timeExpressiveSendStyleId = res.timeExpressiveSendStyleId ?? 0;\n        message.hasAttachments = Object.keys(res).includes(\"attachments\") && res.attachments.length > 0;\n        return message;\n    }\n\n    async saveChat(chat: Chat): Promise<Chat> {\n        const repo = this.db.getRepository(Chat);\n        const existing = chat.ROWID ? chat : await repo.findOne({ guid: chat.guid });\n        if (existing) {\n            if (existing.displayName !== chat.displayName) {\n                // Right now, I don't think anything but the displayName will change\n                await repo.update(existing, { displayName: chat.displayName });\n            }\n\n            return existing;\n        }\n\n        // If it doesn't exist, create it\n        return repo.save(chat);\n    }\n\n    async saveHandle(chat: Chat, handle: Handle): Promise<Handle> {\n        // Always save the chat first\n        const savedChat = await this.saveChat(chat);\n\n        // Save the handle\n        const repo = this.db.getRepository(Handle);\n        const existing = handle.ROWID ? handle : await repo.findOne({ address: handle.address });\n        if (existing) return existing;\n\n        // We don't ever really need to update a handle\n        // so only save it when it doesn't exist\n        const joinRepo = this.db.getRepository(ChatHandleJoin);\n        const saved: Handle = await repo.save(handle);\n\n        // Create the join table data\n        console.log(saved.ROWID);\n        console.log(savedChat.ROWID);\n        const chj: ChatHandleJoin = new ChatHandleJoin();\n        chj.chatId = savedChat.ROWID;\n        chj.handleId = saved.ROWID;\n        await joinRepo.save(chj);\n\n        // Return the results\n        return saved;\n    }\n\n    async saveMessage(chat: Chat, message: Message): Promise<Message> {\n        // Always save the chat first\n        const savedChat = await this.saveChat(chat);\n\n        // Save the handle\n        const repo = this.db.getRepository(Message);\n        const existing = message.ROWID ? message : await repo.findOne({ guid: message.guid });\n\n        // If it exists, check if anything has really changed before updating\n        if (existing) {\n            if (\n                existing.dateDelivered !== message.dateDelivered ||\n                existing.dateRead !== message.dateRead ||\n                existing.error !== message.error ||\n                existing.isArchived !== message.isArchived ||\n                existing.datePlayed !== message.datePlayed\n            ) {\n                await repo.update(existing, {\n                    dateDelivered: message.datePlayed,\n                    dateRead: message.dateRead,\n                    error: message.error,\n                    isArchived: message.isArchived,\n                    datePlayed: message.datePlayed\n                });\n            }\n\n            return existing;\n        }\n\n        // We don't ever really need to update a handle\n        // so only save it when it doesn't exist\n        const joinRepo = this.db.getRepository(ChatMessageJoin);\n        const saved: Message = await repo.save(message);\n\n        // Create the join table data\n        const cmj: ChatMessageJoin = new ChatMessageJoin();\n        cmj.chatId = savedChat.ROWID;\n        cmj.messageId = saved.ROWID;\n        await joinRepo.save(cmj);\n\n        return saved;\n    }\n}\n","import { Entity, Column, PrimaryColumn } from \"typeorm\";\n\n@Entity()\nexport class Config {\n    @PrimaryColumn(\"text\", { name: \"name\" })\n    name: string;\n\n    @Column(\"text\", { name: \"value\", nullable: true })\n    value: string;\n}\n","import { Config } from \"./Config\";\n\nexport { Config };\n","import { app } from \"electron\";\nimport { createConnection, Connection, Long } from \"typeorm\";\n\nimport { Config } from \"./entity\";\n\nexport class ConfigRepository {\n    db: Connection = null;\n\n    config: { [key: string]: any };\n\n    constructor() {\n        this.db = null;\n        this.config = {};\n    }\n\n    async initialize(): Promise<Connection> {\n        if (this.db) {\n            if (!this.db.isConnected) await this.db.connect();\n            return this.db;\n        }\n\n        let dbPath = `${app.getPath(\"userData\")}/config.db`;\n        if (process.env.NODE_ENV !== \"production\") {\n            dbPath = `${app.getPath(\"userData\")}/BlueBubbles-Desktop-App/config.db`;\n        }\n\n        this.db = await createConnection({\n            name: \"config\",\n            type: \"sqlite\",\n            database: dbPath,\n            entities: [Config],\n            synchronize: true,\n            logging: false\n        });\n\n        // Load default config items\n        await this.loadConfig();\n        return this.db;\n    }\n\n    private async loadConfig() {\n        const repo = this.db.getRepository(Config);\n        const items: Config[] = await repo.find();\n        for (const i of items) this.config[i.name] = ConfigRepository.convertFromDbValue(i.value);\n    }\n\n    /**\n     * Checks if the config has an item\n     *\n     * @param name The name of the item to check for\n     */\n    hasConfigItem(name: string): boolean {\n        return Object.keys(this.config).includes(name);\n    }\n\n    /**\n     * Retrieves a config item from the cache\n     *\n     * @param name The name of the config item\n     */\n    getConfigItem(name: string): Date | string | boolean | number {\n        if (!Object.keys(this.config).includes(name)) return null;\n        return ConfigRepository.convertFromDbValue(this.config[name]);\n    }\n\n    /**\n     * Sets a config item in the database\n     *\n     * @param name The name of the config item\n     * @param value The value for the config item\n     */\n    async setConfigItem(name: string, value: Date | string | boolean | number): Promise<void> {\n        const saniVal = ConfigRepository.convertToDbValue(value);\n        const repo = this.db.getRepository(Config);\n        const item = await repo.findOne({ name });\n        if (item) {\n            item.value = saniVal;\n            await repo.save(item);\n        } else {\n            await repo.create({ name, value: saniVal });\n        }\n\n        this.config[name] = saniVal;\n    }\n\n    /**\n     * Converts a generic string value from the database\n     * to its' corresponding correct typed value\n     *\n     * @param input The value straight from the database\n     */\n    private static convertFromDbValue(input: string): any {\n        if (input === \"1\" || input === \"0\") return Boolean(Number(input));\n        if (/^-{0,1}\\d+$/.test(input)) return Number(input);\n        return input;\n    }\n\n    /**\n     * Converts a typed database value input to a string.\n     *\n     * @param input The typed database value\n     */\n    private static convertToDbValue(input: any): string {\n        if (typeof input === \"boolean\") return input ? \"1\" : \"0\";\n        if (input instanceof Date) return String(input.getTime());\n        return String(input);\n    }\n}\n","import { ValueTransformer } from \"typeorm\";\n\nexport const BooleanTransformer: ValueTransformer = {\n    from: dbValue => Boolean(dbValue),\n    to: entityValue => Number(entityValue)\n};\n","import { BooleanTransformer } from \"./BooleanTransformer\";\n\nexport { BooleanTransformer };\n","import * as fs from \"fs\";\nimport * as path from \"path\";\nimport { app } from \"electron\";\n\nexport class FileSystem {\n    public attachmentsDir = `Attachments`;\n\n    async setup(): Promise<void> {\n        this.setupDirectories();\n    }\n\n    // Creates required directories\n    setupDirectories(): void {\n        if (!fs.existsSync(this.attachmentsDir)) fs.mkdirSync(this.attachmentsDir);\n    }\n}\n","import { ipcMain, BrowserWindow } from \"electron\";\nimport { Connection } from \"typeorm\";\n\n// Config and FileSystem Imports\nimport { Config } from \"@server/databases/config/entity/Config\";\nimport { FileSystem } from \"@server/fileSystem\";\nimport { DEFAULT_GENERAL_ITEMS } from \"@server/constants\";\n\n// Database Imports\nimport { ConfigRepository } from \"@server/databases/config\";\nimport { ChatRepository } from \"@server/databases/chat\";\n\n// Service Imports\nimport { SocketService } from \"@server/services\";\n\nimport { ResponseFormat, ChatResponse, MessageResponse } from \"./types\";\nimport { GetChatMessagesParams } from \"./services/socket/types\";\n\nexport class BackendServer {\n    window: BrowserWindow;\n\n    db: Connection;\n\n    chatRepo: ChatRepository;\n\n    configRepo: ConfigRepository;\n\n    socketService: SocketService;\n\n    fs: FileSystem;\n\n    setupComplete: boolean;\n\n    servicesStarted: boolean;\n\n    constructor(window: BrowserWindow) {\n        this.window = window;\n\n        // Databases\n        this.chatRepo = null;\n        this.configRepo = null;\n\n        // Other helpers\n        this.fs = null;\n\n        // Services\n        this.socketService = null;\n\n        this.setupComplete = false;\n        this.servicesStarted = false;\n    }\n\n    /**\n     * Starts the back-end \"server\"\n     */\n    async start(): Promise<void> {\n        console.log(\"Starting BlueBubbles Backend...\");\n        await this.setup();\n\n        try {\n            console.log(\"Launching Services..\");\n            await this.setupServices();\n        } catch (ex) {\n            console.log(\"Failed to launch server services.\", \"error\");\n        }\n\n        console.log(\"Starting Configuration IPC Listeners...\");\n        this.startIpcListeners();\n\n        // Fetch the chats upon start\n        console.log(\"Syncing initial chats...\");\n        await this.fetchChats();\n    }\n\n    /**\n     * Sets up the server by initializing a \"filesystem\" and other\n     * tasks such as setting up the databases and internal services\n     */\n    private async setup(): Promise<void> {\n        console.log(\"Initializing database...\");\n        await this.initializeDatabases();\n\n        try {\n            console.log(\"Initializing filesystem...\");\n            this.fs = new FileSystem();\n            this.fs.setup();\n        } catch (ex) {\n            console.log(`!Failed to setup filesystem! ${ex.message}`);\n        }\n\n        this.setupComplete = true;\n    }\n\n    private async initializeDatabases() {\n        try {\n            console.log(\"Connecting to messaging database...\");\n            this.chatRepo = new ChatRepository();\n            await this.chatRepo.initialize();\n        } catch (ex) {\n            console.log(`Failed to connect to messaging database! ${ex.message}`);\n        }\n\n        try {\n            console.log(\"Connecting to settings database...\");\n            this.configRepo = new ConfigRepository();\n            await this.configRepo.initialize();\n        } catch (ex) {\n            console.log(`Failed to connect to settings database! ${ex.message}`);\n        }\n\n        await this.setupDefaults();\n    }\n\n    /**\n     * Sets up default database values for configuration items\n     */\n    private async setupDefaults(): Promise<void> {\n        try {\n            const repo = this.configRepo.db.getRepository(Config);\n            for (const key of Object.keys(DEFAULT_GENERAL_ITEMS)) {\n                const item = await repo.findOne({ name: key });\n                if (!item) await this.configRepo.setConfigItem(key, DEFAULT_GENERAL_ITEMS[key]());\n            }\n        } catch (ex) {\n            console.log(`Failed to setup default configurations! ${ex.message}`);\n        }\n    }\n\n    /**\n     * Sets up any internal services that need to be instantiated and configured\n     */\n    private async setupServices(override = false) {\n        if (this.servicesStarted && !override) return;\n\n        try {\n            console.log(\"Initializing up socket connection...\");\n            this.socketService = new SocketService(this.db, this.chatRepo, this.configRepo, this.fs);\n\n            // Start the socket service\n            await this.socketService.start();\n        } catch (ex) {\n            console.log(`Failed to setup socket service! ${ex.message}`);\n        }\n\n        this.servicesStarted = true;\n    }\n\n    /**\n     * Fetches chats from the server based on the last time we fetched data.\n     * This is what the server itself calls when it is refreshed or reloaded.\n     * The front-end _should not_ call this function.\n     */\n    async fetchChats(): Promise<void> {\n        if (!this.socketService?.socketServer?.connected) {\n            console.warn(\"Cannot fetch chats when no socket is connected!\");\n            return;\n        }\n\n        const emitData = {\n            loading: true,\n            syncProgress: 0,\n            loginIsValid: true,\n            loadingMessage: \"Connected to the server! Fetching chats...\",\n            redirect: null\n        };\n\n        const now = new Date();\n        const lastFetch = this.configRepo.getConfigItem(\"lastFetch\") as number;\n        const chats: ChatResponse[] = await this.socketService.getChats({});\n\n        emitData.syncProgress = 1;\n        emitData.loadingMessage = `Got ${chats.length} chats from the server. Fetching messages since ${new Date(\n            lastFetch\n        )}`;\n        console.log(emitData.loadingMessage);\n        this.emitToUI(\"setup-update\", emitData);\n\n        // Iterate over each chat and fetch their messages\n        let count = 1;\n        for (const chat of chats) {\n            // First, emit the chat to the front-end\n            this.emitToUI(\"chat\", chat);\n\n            // Second, save the chat to the database\n            const chatObj = ChatRepository.createChatFromResponse(chat);\n            const savedChat = await this.chatRepo.saveChat(chatObj);\n\n            // Third, save the participants for the chat\n            for (const participant of chat.participants ?? []) {\n                const handle = ChatRepository.createHandleFromResponse(participant);\n                await this.chatRepo.saveHandle(savedChat, handle);\n            }\n\n            // Build message request params\n            const payload: GetChatMessagesParams = { withChats: false };\n            if (lastFetch) {\n                payload.after = lastFetch;\n                // Since we are fetching after a date, we want to get as much as we can\n                payload.limit = 1000;\n            }\n\n            // Third, let's fetch the messages from the DB\n            const messages: MessageResponse[] = await this.socketService.getChatMessages(chat.guid, payload);\n            emitData.loadingMessage = `Got ${messages.length} messages for chat, [${chat.displayName ||\n                chat.chatIdentifier}] the server.`;\n            console.log(emitData.loadingMessage);\n\n            // Fourth, let's save the messages to the DB\n            for (const message of messages) {\n                const msg = ChatRepository.createMessageFromResponse(message);\n                await this.chatRepo.saveMessage(savedChat, msg);\n            }\n\n            // Lastly, save the attachments (if any)\n            // TODO\n\n            emitData.syncProgress = Math.floor((count / chats.length) * 100);\n            this.emitToUI(\"setup-update\", emitData);\n            count += 1;\n        }\n\n        // Tell the UI we are finished\n        const later = new Date();\n        emitData.redirect = \"/messaging\";\n        emitData.syncProgress = 100;\n        emitData.loadingMessage = `Finished fetching messages from socket server in [${later.getTime() -\n            now.getTime()} ms].`;\n        console.log(emitData.loadingMessage);\n        this.emitToUI(\"setup-update\", emitData);\n\n        // Save the last fetch date\n        this.configRepo.setConfigItem(\"lastFetch\", now);\n    }\n\n    private startIpcListeners() {\n        ipcMain.handle(\"set-config\", async (event, args) => {\n            for (const item of Object.keys(args)) {\n                const hasConfig = this.configRepo.hasConfigItem(item);\n                if (hasConfig && this.configRepo.getConfigItem(item) !== args[item]) {\n                    await this.configRepo.setConfigItem(item, args[item]);\n                }\n            }\n\n            this.emitToUI(\"config-update\", this.configRepo.config);\n            return this.configRepo.config;\n        });\n\n        ipcMain.handle(\"start-socket-setup\", async (_, args) => {\n            const errData = {\n                loading: false,\n                syncProgress: 0,\n                loginIsValid: false,\n                loadingMessage: \"Setup is starting...\"\n            };\n\n            // Make sure the config DB is setup\n            if (!this.configRepo || !this.configRepo.db.isConnected) {\n                errData.loadingMessage = \"Configuration DB is not yet setup!\";\n                return this.emitToUI(\"setup-update\", errData);\n            }\n\n            // Save the config items\n            await this.configRepo.setConfigItem(\"serverAddress\", args.enteredServerAddress);\n            await this.configRepo.setConfigItem(\"passphrase\", args.enteredPassword);\n\n            try {\n                // If we can't even connect, GTFO\n                await this.socketService.start();\n            } catch {\n                errData.loadingMessage = \"Could not connect to the server!\";\n                return this.emitToUI(\"setup-update\", errData);\n            }\n\n            // If credentials are incorrect, you are disconnected right away. So check that\n            if (!this.socketService.socketServer.connected) {\n                errData.loadingMessage = \"Disconnected from socket server! Credentials may be incorrect!\";\n                return this.emitToUI(\"setup-update\", errData);\n            }\n\n            // Start fetching the data\n            this.fetchChats();\n            return null; // Consistent return\n        });\n    }\n\n    private emitToUI(event: string, data: any) {\n        console.log(this.window);\n        if (this.window) console.log(\"EMITTING\");\n        if (this.window) this.window.webContents.send(event, data);\n    }\n}\n","import { SocketService } from \"./socket\";\n\nexport { SocketService};","import * as io from \"socket.io-client\";\n\n// Internal Libraries\nimport { FileSystem } from \"@server/fileSystem\";\nimport { ResponseFormat, ChatResponse, MessageResponse } from \"@server/types\";\n\n// Database Dependency Imports\nimport { ConfigRepository } from \"@server/databases/config\";\nimport { ChatRepository } from \"@server/databases/chat\";\nimport { Connection } from \"typeorm\";\n\nimport { GetChatsParams, GetChatMessagesParams } from \"./types\";\n\nexport class SocketService {\n    db: Connection;\n\n    socketServer: SocketIOClient.Socket;\n\n    chatRepo: ChatRepository;\n\n    configRepo: ConfigRepository;\n\n    fs: FileSystem;\n\n    serverAddress: string;\n\n    passphrase: string;\n\n    /**\n     * Starts up the initial Socket.IO connection and initializes other\n     * required classes and variables\n     *\n     * @param chatRepo The iMessage database repository\n     * @param configRepo The app's settings repository\n     * @param fs The filesystem class handler\n     */\n    constructor(db: Connection, chatRepo: ChatRepository, configRepo: ConfigRepository, fs: FileSystem) {\n        this.db = db;\n\n        this.socketServer = null;\n        this.chatRepo = chatRepo;\n        this.configRepo = configRepo;\n        this.fs = fs;\n    }\n\n    /**\n     * Sets up the socket listeners\n     */\n    async start(): Promise<boolean> {\n        if (\n            !this.configRepo ||\n            !this.configRepo.getConfigItem(\"serverAddress\") ||\n            !this.configRepo.getConfigItem(\"passphrase\")\n        ) {\n            console.error(\"Setup has not been completed!\");\n            return false;\n        }\n\n        return new Promise((resolve, reject) => {\n            this.socketServer = io(this.configRepo.getConfigItem(\"serverAddress\") as string, {\n                query: {\n                    guid: this.configRepo.getConfigItem(\"passphrase\")\n                }\n            });\n\n            this.socketServer.on(\"connect\", () => {\n                console.log(\"Connected to server via socket.\");\n                resolve(true);\n            });\n\n            this.socketServer.on(\"disconnect\", () => {\n                console.log(\"Disconnected from socket server.\");\n                reject(new Error(\"Disconnected from socket.\"));\n            });\n\n            this.socketServer.on(\"error\", () => {\n                console.log(\"Unable to connect to server.\");\n                reject(new Error(\"Unable to connect to server.\"));\n            });\n        });\n    }\n\n    async getChats({ withParticipants = true }: GetChatsParams): Promise<ChatResponse[]> {\n        return new Promise<ChatResponse[]>((resolve, reject) => {\n            this.socketServer.emit(\"get-chats\", { withParticipants }, (res: ResponseFormat) => {\n                if ([200, 201].includes(res.status)) {\n                    resolve(res.data as ChatResponse[]);\n                } else {\n                    reject(res.message);\n                }\n            });\n        });\n    }\n\n    async getChatMessages(\n        identifier: string,\n        { offset = 0, limit = 25, after = null, before = null, withChats = false, sort = \"DESC\" }: GetChatMessagesParams\n    ): Promise<MessageResponse[]> {\n        return new Promise<MessageResponse[]>((resolve, reject) => {\n            this.socketServer.emit(\n                \"get-chat-messages\",\n                {\n                    identifier,\n                    offset,\n                    limit,\n                    after,\n                    before,\n                    withChats,\n                    sort\n                },\n                res => {\n                    if ([200, 201].includes(res.status)) {\n                        resolve(res.data as MessageResponse[]);\n                    } else {\n                        reject(res.message);\n                    }\n                }\n            );\n        });\n    }\n}\n\n// import {createConnection, getManager} from \"typeorm\";\n// import {Handle} from \"../entities/messaging/Handle\";\n// import {chatPrevGetAllAction} from \"../actions/ChatPrevGetAllAction\";\n\n// //Connect to server with socket\n// export async function ConnectToServer(url, aGuid){\n\n// }\n\n// createConnection({\n//     type: \"sqlite\",\n//     database: \"src/main/server/db/messaging.db\",\n//     entities: [\n//         Handle\n//     ],\n//     synchronize: true,\n//     logging: false\n// }).then(async connection => {\n//     const io = require('socket.io-client')\n//     const socket = io(\"\",{\n//     query: {\n//         guid: \"\"\n//     }\n//     })\n\n//     // On Socket Connect\n//     socket.on('connect', () => {\n//     console.log(socket.connected)\n//     const firstAppStartUp = true;\n\n//     if (firstAppStartUp){\n//         //Get all chats from server and save locally\n//         // initFromServer();\n//         GetAllChatsFromServer();\n//         console.log(\"here\");\n//     } else{\n\n//     }\n//     });\n\n//     // let handle = new Handle();\n//     // handle.address = \"\";\n\n//     //Get All Chats\n//     function GetAllChatsFromServer() {\n//         socket.emit('get-chats',true,(data) => {\n//         console.log(data.data[0].participants[0].address);\n//         await GetHandle();\n//         chatPrevGetAllAction();\n\n//         //Get Handle\n//         asyncfunction GetHandle() {\n//             let handleRepository = connection.getRepository(Handle);\n//             let i;\n//             for(i=0; i < Object.keys(data.data).length; i++){\n//                 let handle = new Handle();\n//                 if(data.data[i].participants[0].address != null) {\n//                     handle.address = data.data[i].participants[0].address;\n//                 };\n//                 if(data.data[i].participants[0].country != null) {\n//                     handle.country = data.data[i].participants[0].country;\n//                 };\n//                 if(data.data[i].participants[0].uncanonicalizedId != null) {\n//                     handle.uncanonicalizedId = data.data[i].participants[0].uncanonicalizedId;\n//                 } else{\n//                     handle.uncanonicalizedId = \"X:XX PM\";\n//                 };\n//                 // console.log(handle.address);\n//                 try {\n//                     // return connection.manager\n//                     //             .save(handle)\n//                     //             .then(handle => {\n//                     //                 console.log(\"handle has been saved. handle address is\", handle.address);\n//                     //             });\n//                     handleRepository.save(handle);\n//                     console.log(\"Handle saved\");\n//                 } catch (err){\n//                     console.log(err);\n//                 }\n\n//             }\n//         }\n\n//             return data\n//         })\n//     }\n\n// }).catch(error => console.log(\"TypeORM connection error: \", error));\n\n// // const initFromServer = {\n\n// // }\n\n// //Get A Single Chat by guid\n// function GetSingleChat(guid){\n//     socket.emit(\"get-chat\",{chatGuid: guid}, (data) =>{\n//         console.log(data.data)\n//         return data.data\n//     })\n// }\n\n// //Get All Messages In A Chat\n// function GetChatMessages(guid){\n//     socket.emit(\"get-chat-messages\",{identifier: guid}, (data) =>{\n//         console.log(data.data)\n//         return data.data\n//     })\n// }\n\n// //Get Most Recent Message For A Given guid\n// function GetMostRecentMessage(guid){\n//     socket.emit(\"get-last-chat-message\",{identifier: guid}, (data) =>{\n//         console.log(data)\n//         return data\n//     })\n// }\n\n// //Get Attachment By guid\n// function GetAttachmentByGUID(guid){\n//     socket.emit(\"get-attatchment\",{identifier: guid}, (data) =>{\n//         console.log(data)\n//         return data\n//     })\n// }\n\n// //Get Attachment Chunk By guid\n// function GetAttachmentChunkByGUID(guid){\n//     socket.emit(\"get-attatchment-chunk\",{identifier: guid}, (data) =>{\n//         console.log(data)\n//         return data\n//     })\n// }\n\n// //Get Participants In A Chat\n// function GetChatParticipants(guid){\n//     socket.emit(\"get-participants\",{identifier: guid}, (data) =>{\n//         console.log(data)\n//         return data\n//     })\n// }\n\n// //Send A Message\n// function SendMessage(chatGuid, myMessage) {\n//     socket.emit(\"send-message\",{guid: chatGuid, message: myMessage}, (data) =>{\n//         console.log(data)\n//         return data\n//     })\n// }\n\n// //Send A Message With Chunked Attachments\n// function SendMessageWithAttachment(guid, myMessage,myAttachmentData){\n//     socket.emit(\"send-message-chunk\",{guid: guid, message: myMessage, attachmentData: myAttachmentData}, (data) =>{\n//         console.log(data)\n//         return data\n//     })\n// }\n\n// //Start A Chat\n// function NewChat(guid, chatParticipants){\n//     socket.emit(\"start-chat\",{identifier: guid, participants: chatParticipants}, (data) =>{\n//         console.log(data)\n//         return data\n//     })\n// }\n\n// //Rename A Group Chat\n// function RenameGroupChat(guid, newGroupName) {\n//     socket.emit(\"rename-group\",{identifier: guid, newName: newGroupName}, (data) =>{\n//         console.log(data)\n//         return data\n//     })\n// }\n\n// //Add A Participant To Chat\n// function AddParticipantToChat(guid, participantAddress){\n//     socket.emit(\"add-participant\",{identifier: guid, address: participantAddress}, (data) =>{\n//         console.log(data)\n//         return data\n//     })\n// }\n\n// //Remove A Participant To Chat\n// function RemoveParticipantToChat(guid, participantAddress){\n//     socket.emit(\"remove-participant\",{identifier: guid, address: participantAddress}, (data) =>{\n//         console.log(data)\n//         return data\n//     })\n// }\n\n// //Send Reaction (NOT IMPLEMENTED IN SERVER)\n// function SendReaction(guid) {\n//     socket.emit(\"send-reaction\",{identifier: guid}, (data) =>{\n//         console.log(data)\n//     })\n// }\n","module.exports = require(\"electron\");","module.exports = require(\"fs\");","module.exports = require(\"path\");","module.exports = require(\"reflect-metadata\");","module.exports = require(\"socket.io-client\");","module.exports = require(\"typeorm\");","module.exports = require(\"url\");"],"sourceRoot":""}